{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","className","Control","name","onChange","target","value","placeholder","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","FormGroup","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","console","log","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","Group","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","ListGroupItem","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","successPay","loadingPay","successDeliver","loadingDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCountInStock","setCategory","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"gLAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mB,QC7BnBC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAA6B,6BAC7BC,EAA2B,2BCH3BC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA2B,2BAC3BC,GAA4B,4BAE5BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBC/BpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCO7BC,GAAUC,0BAAgB,CAC9BC,YCJgC,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACtE,OAAQA,EAAOC,MACb,KAAKjF,EACH,MAAO,CAAEkF,SAAS,EAAMH,SAAU,IACpC,KAAK9E,EACH,MAAO,CACLiF,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,MAAOJ,EAAOG,QAAQC,MACtBC,KAAML,EAAOG,QAAQE,MAEzB,KAAKnF,EACH,MAAO,CAAEgF,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDTXS,eCemC,WAG/B,IAFJT,EAEG,uDAFK,CAAEU,QAAS,CAAEC,QAAS,KAC9BT,EACG,uCACH,OAAQA,EAAOC,MACb,KAAK9E,EAEH,OAAO,aAAE+E,SAAS,GAASJ,GAC7B,KAAK1E,EACH,MAAO,CAAE8E,SAAS,EAAOM,QAASR,EAAOG,SAC3C,KAAK9E,EACH,MAAO,CAAE6E,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,ID3BXY,cCiCkC,WAAsC,IAArCZ,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACvE,OAAQA,EAAOC,MACb,KAAK3E,EAEH,OAAO,aAAE4E,SAAS,GAASJ,GAC7B,KAAKvE,EACH,MAAO,CAAE2E,SAAS,EAAOS,SAAS,GACpC,KAAKnF,EACH,MAAO,CAAE0E,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,ID1CXc,cCgDkC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,KAAKxE,EAEH,OAAO,aAAEyE,SAAS,GAASJ,GAC7B,KAAKpE,EACH,MAAO,CAAEwE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC1D,KAAKxE,EACH,MAAO,CAAEuE,SAAS,EAAOI,MAAON,EAAOG,SACzC,KAAKvE,EACH,MAAO,GACT,QACE,OAAOkE,ID3DXe,cCiEkC,WAAsC,IAArCf,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACvE,OAAQA,EAAOC,MACb,KAAKpE,EAEH,OAAO,aAAEqE,SAAS,GAASJ,GAC7B,KAAKhE,EACH,MAAO,CAAEoE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC1D,KAAKpE,EACH,MAAO,CAAEmE,SAAS,EAAOI,MAAON,EAAOG,SACzC,KAAKnE,EACH,MAAO,CAAEwE,QAAS,IACpB,QACE,OAAOV,ID5EXgB,oBCkFwC,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIE,EAAW,uCAChE,OAAQA,EAAOC,MACb,KAAKhE,EAEH,OAAO,aAAEiE,SAAS,GAASJ,GAC7B,KAAK5D,EACH,MAAO,CAAEgE,SAAS,EAAOS,SAAS,GACpC,KAAKxE,EACH,MAAO,CAAE+D,SAAS,EAAOI,MAAON,EAAOG,SACzC,KAAK/D,EACH,MAAO,CAAEoE,QAAS,IACpB,QACE,OAAOV,ID7FXiB,gBCmGoC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCAC1E,OAAQA,EAAOC,MACb,KAAK5D,EAEH,MAAO,CAAE6D,SAAS,EAAMH,SAAU,IACpC,KAAKzD,EACH,MAAO,CAAE4D,SAAS,EAAOH,SAAUC,EAAOG,SAC5C,KAAK5D,EACH,MAAO,CAAE2D,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,ID5GXkB,KEjCyB,WAGrB,IAFJlB,EAEG,uDAFK,CAAEmB,UAAW,GAAIC,gBAAiB,IAC1ClB,EACG,uCACH,OAAQA,EAAOC,MACb,KAAKzD,EACH,IAAM2E,EAAOnB,EAAOG,QAGdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAACC,GAAD,OAAOA,EAAEd,UAAYW,EAAKX,WAEjE,OAAIY,EAEK,2BACFtB,GADL,IAEEmB,UAAWnB,EAAMmB,UAAUM,KAAI,SAACD,GAAD,OAC7BA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAKtC,2BACFxB,GADL,IAEEmB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAGtC,KAAK1E,EACH,OAAO,2BACFqD,GADL,IAGEmB,UAAWnB,EAAMmB,UAAUO,QAAO,SAACF,GAAD,OAAOA,EAAEd,UAAYR,EAAOG,aAElE,KAAKzD,EACH,OAAO,2BACFoD,GADL,IAGEoB,gBAAiBlB,EAAOG,UAE5B,KAAKxD,EACH,OAAO,2BACFmD,GADL,IAGE2B,cAAezB,EAAOG,UAE1B,QACE,OAAOL,IFXX4B,UGV8B,WAAyB,IAAxB5B,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACb,KAAKrD,EACH,MAAO,CAAEsD,SAAS,GACpB,KAAKrD,EACH,MAAO,CAAEqD,SAAS,EAAOyB,SAAU3B,EAAOG,SAC5C,KAAKrD,EACH,MAAO,CAAEoD,SAAS,EAAOI,MAAON,EAAOG,SACzC,KAAKpD,EACH,MAAO,GACT,QACE,OAAO+C,IHAX8B,aGMiC,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKjD,EACH,MAAO,CAAEkD,SAAS,GACpB,KAAKjD,EACH,MAAO,CAAEiD,SAAS,EAAOyB,SAAU3B,EAAOG,SAC5C,KAAKjD,EACH,MAAO,CAAEgD,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IHdX+B,YGoBiC,WAAmC,IAAlC/B,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCACnE,OAAQA,EAAOC,MACb,KAAK9C,EACH,OAAO,2BAAK2C,GAAZ,IAAmBI,SAAS,IAC9B,KAAK9C,EACH,MAAO,CAAE8C,SAAS,EAAO4B,KAAM9B,EAAOG,SACxC,KAAK9C,EACH,MAAO,CAAE6C,SAAS,EAAOI,MAAON,EAAOG,SACzC,KAAK7C,EAEH,MAAO,CAAEwE,KAAM,IACjB,QACE,OAAOhC,IH/BXiC,kBGqCsC,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACb,KAAK1C,EACH,MAAO,CAAE2C,SAAS,GACpB,KAAK1C,EACH,MAAO,CAAE0C,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAC3D,KAAK1C,EACH,MAAO,CAAEyC,SAAS,EAAOI,MAAON,EAAOG,SACzC,KAAKzC,GACH,MAAO,GACT,QACE,OAAOoC,IH/CXkC,SGqD6B,WAAoC,IAAnClC,EAAkC,uDAA1B,CAAEmC,MAAO,IAAMjC,EAAW,uCAChE,OAAQA,EAAOC,MACb,KAAKtC,GACH,MAAO,CAAEuC,SAAS,GACpB,KAAKtC,GACH,MAAO,CAAEsC,SAAS,EAAO+B,MAAOjC,EAAOG,SACzC,KAAKtC,GACH,MAAO,CAAEqC,SAAS,EAAOI,MAAON,EAAOG,SACzC,KAAKrC,GACH,MAAO,CAAEmE,MAAO,IAClB,QACE,OAAOnC,IH/DXoC,WGqE+B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACb,KAAKlC,GACH,MAAO,CAAEmC,SAAS,GACpB,KAAKlC,GACH,MAAO,CAAEkC,SAAS,EAAOS,SAAS,GACpC,KAAK1C,GACH,MAAO,CAAEiC,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IH7EXqC,WGmF+B,WAAmC,IAAlCrC,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCACjE,OAAQA,EAAOC,MACb,KAAK/B,GACH,MAAO,CAAEgC,SAAS,GACpB,KAAK/B,GACH,MAAO,CAAE+B,SAAS,EAAOS,SAAS,GACpC,KAAKvC,GACH,MAAO,CAAE8B,SAAS,EAAOI,MAAON,EAAOG,SACzC,KAAK9B,GACH,MAAO,GACT,QACE,OAAOyB,IH7FXsC,YIxBgC,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACb,KAAK3B,GACH,MAAO,CACL4B,SAAS,GAEb,KAAK3B,GACH,MAAO,CACL2B,SAAS,EACTS,SAAS,EACT0B,MAAOrC,EAAOG,SAElB,KAAK3B,GACH,MAAO,CACL0B,SAAS,EACTI,MAAON,EAAOG,SAElB,QACE,OAAOL,IJOXwC,aIHiC,WAG7B,IAFJxC,EAEG,uDAFK,CAAEI,SAAS,EAAMqC,WAAY,GAAIrB,gBAAiB,IAC1DlB,EACG,uCACH,OAAQA,EAAOC,MACb,KAAKxB,GACH,OAAO,2BACFqB,GADL,IAEEI,SAAS,IAEb,KAAKxB,GACH,MAAO,CACLwB,SAAS,EACTmC,MAAOrC,EAAOG,SAElB,KAAKxB,GACH,MAAO,CACLuB,SAAS,EACTI,MAAON,EAAOG,SAElB,QACE,OAAOL,IJjBX0C,SIqB6B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACb,KAAKrB,GACH,MAAO,CACLsB,SAAS,GAEb,KAAKrB,GACH,MAAO,CACLqB,SAAS,EACTS,SAAS,GAEb,KAAK7B,GACH,MAAO,CACLoB,SAAS,EACTI,MAAON,EAAOG,SAElB,KAAKpB,GACH,MAAO,GACT,QACE,OAAOe,IJvCX2C,aI2CiC,WAAyB,IAAxB3C,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKV,GACH,MAAO,CACLW,SAAS,GAEb,KAAKV,GACH,MAAO,CACLU,SAAS,EACTS,SAAS,GAEb,KAAKlB,GACH,MAAO,CACLS,SAAS,EACTI,MAAON,EAAOG,SAElB,KAAKT,GACH,MAAO,GACT,QACE,OAAOI,IJ7DX4C,YIiEgC,WAAqC,IAApC5C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCACpE,OAAQA,EAAOC,MACb,KAAKjB,GACH,MAAO,CACLkB,SAAS,GAEb,KAAKjB,GACH,MAAO,CACLiB,SAAS,EACTyC,OAAQ3C,EAAOG,SAEnB,KAAKjB,GACH,MAAO,CACLgB,SAAS,EACTI,MAAON,EAAOG,SAElB,KAAKhB,GAEH,MAAO,CAAEwD,OAAQ,IACnB,QACE,OAAO7C,IJpFX8C,UIwF8B,WAAqC,IAApC9C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCAClE,OAAQA,EAAOC,MACb,KAAKb,GACH,MAAO,CACLc,SAAS,GAEb,KAAKb,GACH,MAAO,CACLa,SAAS,EACTyC,OAAQ3C,EAAOG,SAEnB,KAAKb,GACH,MAAO,CACLY,SAAS,EACTI,MAAON,EAAOG,SAElB,QACE,OAAOL,MJrGP+C,GAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GAGEG,GAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAaEI,GAAe,CACnBnC,KAAM,CACJC,UAAW4B,GACX3B,gBAb+B4B,aAAaC,QAAQ,mBACpDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAChC,GAYAtB,cAT6BqB,aAAaC,QAAQ,iBAClDC,KAAKC,MAAMH,aAAaC,QAAQ,kBAChC,IASFrB,UAAW,CAAEC,SAAUuB,KAGnBE,GAAa,CAACC,KAQLC,GANDC,sBACZ5D,GACAwD,GACAK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,oHK5D1BM,GA5BG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,EAA8BC,mBAAS,IAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KAWA,OACE,gBAACC,GAAA,EAAD,CAAMC,SAVc,SAACC,GACrBA,EAAEC,iBACEL,EAAQM,OACVR,EAAQS,KAAR,kBAAwBP,IAExBF,EAAQS,KAAK,MAKgBC,QAAM,EAACC,UAAU,SAAhD,UACE,eAACP,GAAA,EAAKQ,QAAN,CACEtE,KAAK,OACLuE,KAAK,IACLC,SAAU,SAACR,GAAD,OAAOH,EAAWG,EAAES,OAAOC,QACrCC,YAAY,qBACZN,UAAU,oBAEZ,eAACO,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,kBAAkBR,UAAU,MAA1D,wB,gDC4FOS,GAAiB,SAACC,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CACPhF,KAAM9C,IAH0B,EAS9B+H,IADWvD,EARmB,EAQhCD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAfJ,SAmBXC,KAAMC,IAAN,qBAAwBT,GAAMI,GAnBnB,gBAmB1BM,EAnB0B,EAmB1BA,KAERT,EAAS,CACPhF,KAAM7C,EACN+C,QAASuF,IAvBuB,kDA0BlCT,EAAS,CACPhF,KAAM5C,EAEN8C,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhCoB,0DAAR,yDC1CfC,GAhEA,SAAC,GAAgB,EAAdlC,QAAe,IACzBsB,EAAWa,cAITnE,EADUoE,aAAY,SAACjG,GAAD,OAAWA,EAAM4B,aACvCC,SAMR,OACE,kCACE,eAACqE,GAAA,EAAD,CAAQC,GAAG,OAAOnB,QAAQ,OAAOoB,OAAO,KAAKC,kBAAgB,EAA7D,SACE,gBAACC,GAAA,EAAD,WACE,eAAC,iBAAD,CAAeC,GAAG,IAAlB,SACE,eAACL,GAAA,EAAOM,MAAR,wBAEF,eAACN,GAAA,EAAOO,OAAR,CAAe,gBAAc,qBAC7B,gBAACP,GAAA,EAAOQ,SAAR,CAAiBxB,GAAG,mBAApB,UACE,eAAC,KAAD,CAAOyB,OAAQ,gBAAG9C,EAAH,EAAGA,QAAH,OAAiB,eAAC,GAAD,CAAWA,QAASA,OACpD,gBAAC+C,GAAA,EAAD,CAAKpC,UAAU,UAAf,UACE,eAAC,iBAAD,CAAe+B,GAAG,QAAlB,SACE,gBAACK,GAAA,EAAIC,KAAL,WACE,oBAAGrC,UAAU,yBADf,aAID3C,EACC,gBAACiF,GAAA,EAAD,CAAaC,MAAOlF,EAAS6C,KAAMQ,GAAG,WAAtC,UACE,eAAC,iBAAD,CAAeqB,GAAG,WAAlB,SACE,eAACO,GAAA,EAAYE,KAAb,wBAEF,eAACF,GAAA,EAAYE,KAAb,CAAkBC,QAzBZ,WACpB9B,GD+CwB,SAACA,GAC3BnC,aAAakE,WAAW,YACxB/B,EAAS,CAAEhF,KAAMlD,IACjBkI,EAAS,CAAEhF,KAAM3C,IACjB2H,EAAS,CAAEhF,KAAMd,KACjB8F,EAAS,CAAEhF,KAAMnC,SC5BD,uBAKF,eAAC,iBAAD,CAAeuI,GAAG,SAAlB,SACE,gBAACK,GAAA,EAAIC,KAAL,WACE,oBAAGrC,UAAU,gBADf,gBAKH3C,GAAYA,EAASsF,SACpB,gBAACL,GAAA,EAAD,CAAaC,MAAM,QAAQ7B,GAAG,YAA9B,UACE,eAAC,iBAAD,CAAeqB,GAAG,kBAAlB,SACE,eAACO,GAAA,EAAYE,KAAb,sBAEF,eAAC,iBAAD,CAAeT,GAAG,qBAAlB,SACE,eAACO,GAAA,EAAYE,KAAb,yBAEF,eAAC,iBAAD,CAAeT,GAAG,mBAAlB,SACE,eAACO,GAAA,EAAYE,KAAb,wC,mBCjDLI,GAVA,WACb,OACE,eAACd,GAAA,EAAD,UACE,eAACe,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAK9C,UAAU,mBAAf,yC,UCJF+C,GAAS,SAAC,GAA4B,IAA1B1C,EAAyB,EAAzBA,MAAO2C,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC7B,OACE,uBAAKjD,UAAU,SAAf,UACE,kCACE,oBACEkD,MAAO,CAAED,SACTjD,UACEK,GAAS,EACL,cACAA,GAAS,GACT,uBACA,gBAGR,oBACE6C,MAAO,CAAED,SACTjD,UACEK,GAAS,EACL,cACAA,GAAS,IACT,uBACA,gBAGR,oBACE6C,MAAO,CAAED,SACTjD,UACEK,GAAS,EACL,cACAA,GAAS,IACT,uBACA,gBAGR,oBACE6C,MAAO,CAAED,SACTjD,UACEK,GAAS,EACL,cACAA,GAAS,IACT,uBACA,gBAGR,oBACE6C,MAAO,CAAED,SACTjD,UACEK,GAAS,EACL,cACAA,GAAS,IACT,uBACA,mBAKV,gCAAO2C,GAAQA,QAKrBD,GAAOI,aAAe,CACpBF,MAAO,WAUMF,UC7CAK,GAxBC,SAAC,GAAiB,IAAflH,EAAc,EAAdA,QACjB,OACE,gBAACmH,GAAA,EAAD,CAAMrD,UAAU,mBAAhB,UACE,eAAC,QAAD,CAAM+B,GAAE,mBAAc7F,EAAQoH,KAA9B,SACE,eAACD,GAAA,EAAKE,IAAN,CAAUC,IAAKtH,EAAQuH,MAAOjD,QAAQ,WAExC,gBAAC6C,GAAA,EAAKK,KAAN,WACE,eAAC,QAAD,CAAM3B,GAAE,mBAAc7F,EAAQoH,KAA9B,SACE,eAACD,GAAA,EAAKM,MAAN,CAAYC,GAAG,MAAf,SACE,kCAAS1H,EAAQgE,WAGrB,eAACmD,GAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,SACE,eAAC,GAAD,CACEvD,MAAOnE,EAAQ4H,OACfd,KAAI,UAAK9G,EAAQ6H,WAAb,gBAGR,gBAACV,GAAA,EAAKQ,KAAN,CAAWD,GAAG,KAAd,cAAqB1H,EAAQ8H,gB,UCrB/BC,GAAU,SAAC,GAA2B,IAAzBzD,EAAwB,EAAxBA,QAAS0D,EAAe,EAAfA,SAC1B,OAAO,eAACC,GAAA,EAAD,CAAO3D,QAASA,EAAhB,SAA0B0D,KAGnCD,GAAQd,aAAe,CACrB3C,QAAS,QAGIyD,U,UCSAG,GAjBA,WACb,OACE,eAACC,GAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLrB,MAAO,CACLsB,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,SAPb,SAUE,uBAAM3E,UAAU,UAAhB,wB,UCYS4E,GAvBE,SAAC,GAAoD,IAAlD9I,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAA0C,IAApC4G,eAAoC,aAAnBpD,eAAmB,MAAT,GAAS,EACnE,OACEzD,EAAQ,GACN,eAAC+I,GAAA,EAAD,UACG,YAAIC,MAAMhJ,GAAOiJ,QAAQ9H,KAAI,SAACD,GAAD,OAC5B,eAAC,iBAAD,CAEE+E,GACGY,EAAD,6BAI0B3F,EAAI,GAH1BuC,EAAO,kBACMA,EADN,iBACsBvC,EAAI,GAD1B,gBAEIA,EAAI,GANvB,SAUE,eAAC6H,GAAA,EAAWrC,KAAZ,CAAiBwC,OAAQhI,EAAI,IAAMjB,EAAnC,SAA0CiB,EAAI,KATzCA,EAAI,SCeRiI,GACX,eAAC1F,EAAD,uDAAW,GAAI2F,EAAf,uDAA4B,GAA5B,gDACA,WAAOvE,GAAP,kBAAAE,EAAA,sEAEIF,EAAS,CAAEhF,KAAMjF,IAFrB,SAI2BwK,KAAMC,IAAN,gCACI5B,EADJ,uBAC0B2F,IALrD,gBAIY9D,EAJZ,EAIYA,KAIRT,EAAS,CACPhF,KAAMhF,EACNkF,QAASuF,IAVf,gDAaIT,EAAS,CACPhF,KAAM/E,EAENiF,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAnBlB,yDADA,uDAyBW6D,GAAqB,SAACzE,GAAD,gDAAQ,WAAOC,GAAP,kBAAAE,EAAA,sEAEtCF,EAAS,CAAEhF,KAAM9E,IAFqB,SAIfqK,KAAMC,IAAN,wBAA2BT,IAJZ,gBAI9BU,EAJ8B,EAI9BA,KAERT,EAAS,CACPhF,KAAM7E,EACN+E,QAASuF,IAR2B,gDAWtCT,EAAS,CACPhF,KAAM5E,EAEN8E,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAjBwB,yDAAR,uD,oBCXnB8D,GAhCS,WACtB,IAAMzE,EAAWa,cAEX/E,EAAkBgF,aAAY,SAACjG,GAAD,OAAWA,EAAMiB,mBAC7Cb,EAA6Ba,EAA7Bb,QAASI,EAAoBS,EAApBT,MAAOP,EAAagB,EAAbhB,SAMxB,OAJA4J,qBAAU,WACR1E,ED+M2B,yCAAM,WAAOA,GAAP,kBAAAE,EAAA,sEAEjCF,EAAS,CAAEhF,KAAM5D,IAFgB,SAIVmJ,KAAMC,IAAN,qBAJU,gBAIzBC,EAJyB,EAIzBA,KAERT,EAAS,CACPhF,KAAM3D,EACN6D,QAASuF,IARsB,gDAWjCT,EAAS,CACPhF,KAAM1D,EAEN4D,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAjBmB,yDAAN,yDC9M1B,CAACX,IAEG/E,EACL,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,eAACsJ,GAAA,EAAD,CAAUC,MAAM,QAAQvF,UAAU,UAAlC,SACGvE,EAASwB,KAAI,SAACf,GAAD,OACZ,eAACoJ,GAAA,EAAS9C,KAAV,UACE,gBAAC,QAAD,CAAMT,GAAE,mBAAc7F,EAAQoH,KAA9B,UACE,eAACkC,GAAA,EAAD,CAAOhC,IAAKtH,EAAQuH,MAAOgC,IAAKvJ,EAAQgE,KAAMwF,OAAK,IACnD,eAACJ,GAAA,EAASK,QAAV,CAAkB3F,UAAU,mBAA5B,SACE,gCACG9D,EAAQgE,KADX,MACoBhE,EAAQ8H,MAD5B,aAJc9H,EAAQoH,W,SCtB9BsC,GAAO,SAAC,GAAsC,IAApCrD,EAAmC,EAAnCA,MAAOsD,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAClC,OACE,gBAACC,GAAA,EAAD,WACE,iCAAQxD,IACR,uBAAMrC,KAAK,cAAc8F,QAASH,IAClC,uBAAM3F,KAAK,UAAU8F,QAASF,QAKpCF,GAAKzC,aAAe,CAClBZ,MAAO,qBACPsD,YAAa,sCACbC,SAAU,mDAGGF,UCgDAK,GAvDI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd3G,EAAU2G,EAAMC,OAAO5G,QACvB2F,EAAagB,EAAMC,OAAOjB,YAAc,EAExCvE,EAAWa,cAEXjG,EAAckG,aAAY,SAACjG,GAAD,OAAWA,EAAMD,eACzCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KASzC,OANAsJ,qBAAU,WAER1E,EAASsE,GAAa1F,EAAS2F,MAE9B,CAACvE,EAAUpB,EAAS2F,IAGrB,uCACE,eAAC,GAAD,IACE3F,EAGA,eAAC,QAAD,CAAMwC,GAAG,IAAI/B,UAAU,gBAAvB,qBAFA,eAAC,GAAD,IAMF,kDAECpE,EACC,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,uCACE,eAAC6G,GAAA,EAAD,UAEGpH,EAASwB,KAAI,SAACf,GAAD,OAEZ,cADA,CACC4G,GAAA,EAAD,CAAuBsD,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAjD,SAEE,eAAC,GAAD,CAASrK,QAASA,KAFVA,EAAQoH,UAMtB,eAAC,GAAD,CACExH,MAAOA,EACPC,KAAMA,EACNwD,QAASA,GAAoB,Y,mBCuK1BiH,GA1MO,SAAC,GAAwB,IAAtBnH,EAAqB,EAArBA,QAAS6G,EAAY,EAAZA,MAChC,EAAsB5G,mBAAS,GAA/B,oBAAOmH,EAAP,KAAYC,EAAZ,KACA,EAA4BpH,mBAAS,GAArC,oBAAOwE,EAAP,KAAe6C,EAAf,KACA,EAA8BrH,mBAAS,IAAvC,oBAAOsH,EAAP,KAAgBC,EAAhB,KAEMlG,EAAWa,cAEXvF,EAAiBwF,aAAY,SAACjG,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAGhBmB,EADUoE,aAAY,SAACjG,GAAD,OAAWA,EAAM4B,aACvCC,SAEFb,EAAsBiF,aAAY,SAACjG,GAAD,OAAWA,EAAMgB,uBACxCsK,EACftK,EADMH,QAAsC0K,EAC5CvK,EADqCR,MAMvCqJ,qBAAU,WACJyB,IACFE,MAAM,qBACNL,EAAU,GACVE,EAAW,IACXlG,EAAS,CAAEhF,KAAM7D,KAGnB6I,EAASwE,GAAmBe,EAAMC,OAAOzF,OAExC,CAACC,EAAUuF,EAAOY,IAgBrB,OACE,uCACE,eAAC,QAAD,CAAM9G,UAAU,qBAAqB+B,GAAG,IAAxC,qBAICnG,EACC,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,uCACE,eAAC,GAAD,CAAMuG,MAAOrG,EAAQgE,OACrB,gBAAC2C,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,eAACb,GAAA,EAAD,CAAOhC,IAAKtH,EAAQuH,MAAOgC,IAAKvJ,EAAQgE,KAAMwF,OAAK,MAErD,eAAC5C,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,gBAACY,GAAA,EAAD,CAAWzG,QAAQ,QAAnB,UACE,eAACyG,GAAA,EAAUzE,KAAX,UACE,8BAAKtG,EAAQgE,SAEf,eAAC+G,GAAA,EAAUzE,KAAX,UACE,eAAC,GAAD,CACEnC,MAAOnE,EAAQ4H,OACfd,KAAI,UAAK9G,EAAQ6H,WAAb,gBAGR,gBAACkD,GAAA,EAAUzE,KAAX,sBAAyBtG,EAAQ8H,SACjC,gBAACiD,GAAA,EAAUzE,KAAX,2BACgBtG,EAAQ2J,oBAI5B,eAAC/C,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,eAAChD,GAAA,EAAD,UACE,gBAAC4D,GAAA,EAAD,CAAWzG,QAAQ,QAAnB,UACE,eAACyG,GAAA,EAAUzE,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,UACE,wCAAU5G,EAAQ8H,gBAKxB,eAACiD,GAAA,EAAUzE,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,sBACA,eAACA,GAAA,EAAD,UACG5G,EAAQgL,aAAe,EAAI,WAAa,sBAK9ChL,EAAQgL,aAAe,GACtB,eAACD,GAAA,EAAUzE,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,kBACA,eAACA,GAAA,EAAD,UACE,eAACrD,GAAA,EAAKQ,QAAN,CACE2D,GAAG,SACHvD,MAAOoG,EACPtG,SAAU,SAACR,GAAD,OAAO+G,EAAO/G,EAAES,OAAOC,QAHnC,SAKG,YAAIyE,MAAM5I,EAAQgL,cAAcnC,QAAQ9H,KACvC,SAACD,GAAD,OACE,yBAAoBqD,MAAOrD,EAAI,EAA/B,SACGA,EAAI,GADMA,EAAI,eAW/B,eAACiK,GAAA,EAAUzE,KAAX,UACE,eAACjC,GAAA,EAAD,CACEkC,QA9FK,WACvBpD,EAAQS,KAAR,gBAAsBoG,EAAMC,OAAOzF,GAAnC,gBAA6C+F,KA8F3BzG,UAAU,YACVrE,KAAK,SACLwL,SAAmC,IAAzBjL,EAAQgL,aAJpB,qCAaV,eAACrE,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACE,0CAC4B,IAA3BnK,EAAQC,QAAQiL,QAAgB,eAAC,GAAD,yBACjC,gBAACH,GAAA,EAAD,CAAWzG,QAAQ,QAAnB,UACGtE,EAAQC,QAAQc,KAAI,SAACoK,GAAD,OACnB,gBAACJ,GAAA,EAAUzE,KAAX,WACE,kCAAS6E,EAAOnH,OAChB,eAAC,GAAD,CAAQG,MAAOgH,EAAOvD,SACtB,6BAAIuD,EAAOC,UAAUC,UAAU,EAAG,MAClC,6BAAIF,EAAOT,YAJQS,EAAO/D,QAO9B,gBAAC2D,GAAA,EAAUzE,KAAX,WACE,0DACCuE,GACC,eAAC,GAAD,CAASvG,QAAQ,SAAjB,SAA2BuG,IAE5B1J,EACC,gBAACoC,GAAA,EAAD,CAAMC,SAzHF,SAACC,GJ8HvB,IAAC6H,EAAWH,EI7HV1H,EAAEC,iBACFe,GJ4HD6G,EI3HuBtB,EAAMC,OAAOzF,GJ2HzB2G,EI3H6B,CACnCvD,SACA8C,WJyHN,yCAAuB,WAAOjG,EAAUC,GAAjB,oBAAAC,EAAA,sEAEnBF,EAAS,CACPhF,KAAMhE,IAHW,EASfiJ,IADWvD,EARI,EAQjBD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAfnB,SAmBbC,KAAMuG,KAAN,wBAA4BD,EAA5B,YAAiDH,EAAQvG,GAnB5C,OAqBnBH,EAAS,CACPhF,KAAM/D,IAtBW,gDAyBnB+I,EAAS,CACPhF,KAAM9D,EAENgE,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA/BK,yDAAvB,2DILkB,UACE,gBAACoG,GAAA,EAAD,CAAWC,UAAU,SAArB,UACE,eAAClI,GAAA,EAAKmI,MAAN,qBACA,gBAACnI,GAAA,EAAKQ,QAAN,CACED,UAAU,mBACV4D,GAAG,SACHvD,MAAOyD,EACP3D,SAAU,SAACR,GAAD,OAAOgH,EAAUhH,EAAES,OAAOC,QAJtC,UAME,yBAAQA,MAAM,GAAd,uBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,2BACA,yBAAQA,MAAM,IAAd,iCAGJ,gBAACqH,GAAA,EAAD,CAAWC,UAAU,UAArB,UACE,eAAClI,GAAA,EAAKmI,MAAN,sBACA,eAACnI,GAAA,EAAKQ,QAAN,CACE2D,GAAG,WACHiE,IAAI,IACJxH,MAAOuG,EACPzG,SAAU,SAACR,GAAD,OAAOkH,EAAWlH,EAAES,OAAOC,aAGzC,eAACE,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAAUR,UAAU,OAAlD,uBAKF,gBAAC,GAAD,qBACS,eAAC,QAAD,CAAM+B,GAAG,SAAT,qBADT,0CC3MP+F,GAAY,SAACpH,EAAI+F,GAAL,gDAAa,WAAO9F,EAAUC,GAAjB,kBAAAC,EAAA,sEACbK,KAAMC,IAAN,wBAA2BT,IADd,gBAC5BU,EAD4B,EAC5BA,KAGRT,EAAS,CACPhF,KAAMzD,EACN2D,QAAS,CACPK,QAASkF,EAAKkC,IACdpD,KAAMkB,EAAKlB,KACXuD,MAAOrC,EAAKqC,MACZO,MAAO5C,EAAK4C,MACZkD,aAAc9F,EAAK8F,aACnBT,SAKJjI,aAAauJ,QAAQ,YAAarJ,KAAKsJ,UAAUpH,IAAWlE,KAAKC,YAjB7B,2CAAb,yDC2HVsL,GArHI,SAAC,GAAkC,IAAhC/B,EAA+B,EAA/BA,MAAOgC,EAAwB,EAAxBA,SAAU7I,EAAc,EAAdA,QAC/BmI,EAAYtB,EAAMC,OAAOzF,GAIzB+F,EAAMyB,EAASC,OAASC,OAAOF,EAASC,OAAOE,MAAM,KAAK,IAAM,EAEhE1H,EAAWa,cAGT7E,EADK8E,aAAY,SAACjG,GAAD,OAAWA,EAAMkB,QAClCC,UAER2L,QAAQC,IAAI5L,GAGZ0I,qBAAU,WACJmC,GACF7G,EAASmH,GAAUN,EAAWf,MAE/B,CAAC9F,EAAU6G,EAAWf,IAEzB,IAAM+B,EAAwB,SAAC9H,GAC7BC,EDP0B,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC/CD,EAAS,CAAEhF,KAAMxD,EAAkB0D,QAAS6E,IAE5ClC,aAAauJ,QAAQ,YAAarJ,KAAKsJ,UAAUpH,IAAWlE,KAAKC,aCItD8L,CAAe/H,KAO1B,OACE,gBAACmC,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACE,gDACsB,IAArB1J,EAAUyK,OACT,gBAAC,GAAD,iCACqB,eAAC,QAAD,CAAMrF,GAAG,IAAT,wBAGrB,eAACkF,GAAA,EAAD,CAAWzG,QAAQ,QAAnB,SAGG7D,EAAUM,KAAI,SAACJ,GAAD,OACb,eAACoK,GAAA,EAAUzE,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,eAACb,GAAA,EAAD,CAAOhC,IAAK3G,EAAK4G,MAAOgC,IAAK5I,EAAKqD,KAAMwF,OAAK,EAACgD,SAAO,MAEvD,eAAC5F,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,eAAC,QAAD,CAAMtE,GAAE,mBAAclF,EAAKX,SAA3B,SAAuCW,EAAKqD,SAE9C,gBAAC4C,GAAA,EAAD,CAAKuD,GAAI,EAAT,cAAcxJ,EAAKmH,SACnB,eAAClB,GAAA,EAAD,CAAKuD,GAAI,EAAT,SAEE,eAAC5G,GAAA,EAAKQ,QAAN,CACED,UAAU,cACV4D,GAAG,SACHvD,MAAOxD,EAAK4J,IAEZtG,SAAU,SAACR,GAAD,OACRgB,EACEmH,GAAUjL,EAAKX,QAASkM,OAAOzI,EAAES,OAAOC,UAP9C,SAYG,YAAIyE,MAAMjI,EAAKqK,cAAcnC,QAAQ9H,KAAI,SAACD,GAAD,OACxC,yBAAoBqD,MAAOrD,EAAI,EAA/B,SACGA,EAAI,GADMA,EAAI,UAMvB,eAAC8F,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,eAAC9F,GAAA,EAAD,CACE5E,KAAK,SACL6E,QAAQ,QACRiC,QAAS,kBAAM+F,EAAsB3L,EAAKX,UAH5C,SAKE,oBAAG8D,UAAU,yBApCAnD,EAAKX,iBA6ClC,eAAC4G,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,eAAChD,GAAA,EAAD,UACE,gBAAC4D,GAAA,EAAD,CAAWzG,QAAQ,QAAnB,UACE,gBAACyG,GAAA,EAAUzE,KAAX,WACE,iDAEG7F,EAAUgM,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAK4J,MAAK,GAFnD,aADF,IAMG9J,EACEgM,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAK4J,IAAM5J,EAAKmH,QAAO,GACnD6E,QAAQ,MAEb,eAAC5B,GAAA,EAAUzE,KAAX,UACE,eAACjC,GAAA,EAAD,CACE5E,KAAK,SACLqE,UAAU,YACVmH,SAA+B,IAArBxK,EAAUyK,OACpB3E,QAhFU,SAAC/B,GACvBrB,EAAQS,KAAK,6BA2EH,8CCrGCgJ,GAZO,SAAC,GAAkB,IAAhB5E,EAAe,EAAfA,SACvB,OACE,eAACpC,GAAA,EAAD,UACE,eAACe,GAAA,EAAD,CAAK7C,UAAU,4BAAf,SACE,eAAC8C,GAAA,EAAD,CAAKiG,GAAI,GAAI1C,GAAI,EAAjB,SACGnC,SCqEI8E,GApEK,SAAC,GAA2B,IAAzBd,EAAwB,EAAxBA,SAAU7I,EAAc,EAAdA,QAC/B,EAA0BC,mBAAS,IAAnC,oBAAO2J,EAAP,KAAcC,EAAd,KACA,EAAgC5J,mBAAS,IAAzC,oBAAO6J,EAAP,KAAiBC,EAAjB,KAEMzI,EAAWa,cAEXpE,EAAYqE,aAAY,SAACjG,GAAD,OAAWA,EAAM4B,aACvCxB,EAA6BwB,EAA7BxB,QAASI,EAAoBoB,EAApBpB,MAAOqB,EAAaD,EAAbC,SAGlBgM,EAAWnB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnEhD,qBAAU,WAEJhI,GACFgC,EAAQS,KAAKuJ,KAEd,CAAChK,EAAShC,EAAUgM,IAOvB,OACE,gBAAC,GAAD,WACE,0CACCrN,GAAS,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAAC6D,GAAA,EAAD,CAAMC,SAVY,SAACC,GACrBA,EAAEC,iBACFe,EhBDiB,SAACsI,EAAOE,GAAR,gDAAqB,WAAOxI,GAAP,oBAAAE,EAAA,sEAEtCF,EAAS,CACPhF,KAAMrD,IAGFwI,EAAS,CACbC,QAAS,CACP,eAAgB,qBARkB,SAYfG,KAAMuG,KAC3B,kBACA,CAAEwB,QAAOE,YACTrI,GAfoC,gBAY9BM,EAZ8B,EAY9BA,KAMRT,EAAS,CACPhF,KAAMpD,EACNsD,QAASuF,IAGX5C,aAAauJ,QAAQ,WAAYrJ,KAAKsJ,UAAU5G,IAvBV,kDAyBtCT,EAAS,CACPhF,KAAMnD,EAENqD,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA/BwB,0DAArB,sDgBCRgI,CAAML,EAAOE,KAQpB,UACE,gBAAC1J,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,QAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,CAAY5H,UAAU,OAAtB,2BACA,eAACP,GAAA,EAAKQ,QAAN,CACEtE,KAAK,QACL2E,YAAY,cACZD,MAAO4I,EAEP9I,SAAU,SAACR,GAAD,OAAOuJ,EAASvJ,EAAES,OAAOC,aAGvC,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,WAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,CAAY5H,UAAU,YAAtB,sBACA,eAACP,GAAA,EAAKQ,QAAN,CACEtE,KAAK,WACL2E,YAAY,iBACZD,MAAO8I,EAEPhJ,SAAU,SAACR,GAAD,OAAOyJ,EAAYzJ,EAAES,OAAOC,aAI1C,eAACE,GAAA,EAAD,CAAQP,UAAU,oBAAoBrE,KAAK,SAAS6E,QAAQ,UAA5D,wBAIF,eAACqC,GAAA,EAAD,CAAK7C,UAAU,OAAf,SACE,gBAAC8C,GAAA,EAAD,2BACgB,IAEd,eAAC,QAAD,CAAMf,GAAIsH,EAAQ,6BAAyBA,GAAa,YAAxD,+BCuCKG,GAlGQ,SAAC,GAA2B,IAAzBtB,EAAwB,EAAxBA,SAAU7I,EAAc,EAAdA,QAClC,EAAwBC,mBAAS,IAAjC,oBAAOY,EAAP,KAAauJ,EAAb,KACA,EAA0BnK,mBAAS,IAAnC,oBAAO2J,EAAP,KAAcC,EAAd,KACA,EAAgC5J,mBAAS,IAAzC,oBAAO6J,EAAP,KAAiBC,EAAjB,KACA,EAA8C9J,mBAAS,IAAvD,oBAAOoK,EAAP,KAAwBC,EAAxB,KACA,EAA8BrK,mBAAS,MAAvC,oBAAOgC,EAAP,KAAgBsI,EAAhB,KAEMjJ,EAAWa,cAEXlE,EAAemE,aAAY,SAACjG,GAAD,OAAWA,EAAM8B,gBAC1C1B,EAA6B0B,EAA7B1B,QAASI,EAAoBsB,EAApBtB,MAAOqB,EAAaC,EAAbD,SAGlBgM,EAAWnB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnEhD,qBAAU,WAEJhI,GACFgC,EAAQS,KAAKuJ,KAEd,CAAChK,EAAShC,EAAUgM,IAWvB,OACE,gBAAC,GAAD,WACE,0CAEC/H,GAAW,eAAC,GAAD,CAASd,QAAQ,SAAjB,SAA2Bc,IAEtCtF,GAAS,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAAC6D,GAAA,EAAD,CAAMC,SAjBY,SAACC,GACrBA,EAAEC,iBACEuJ,IAAaO,EACfE,EAAW,0BAEXjJ,EjBqCkB,SAACT,EAAM+I,EAAOE,GAAd,gDAA2B,WAAOxI,GAAP,oBAAAE,EAAA,sEAE/CF,EAAS,CACPhF,KAAMjD,IAGFoI,EAAS,CACbC,QAAS,CACP,eAAgB,qBAR2B,SAYxBG,KAAMuG,KAC3B,YACA,CAAEvH,OAAM+I,QAAOE,YACfrI,GAf6C,gBAYvCM,EAZuC,EAYvCA,KAMRT,EAAS,CACPhF,KAAMhD,EACNkD,QAASuF,IAIXT,EAAS,CACPhF,KAAMpD,EACNsD,QAASuF,IAGX5C,aAAauJ,QAAQ,WAAYrJ,KAAKsJ,UAAU5G,IA7BD,kDA+B/CT,EAAS,CACPhF,KAAM/C,EAENiD,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UArCiC,0DAA3B,sDiBrCTuI,CAAS3J,EAAM+I,EAAOE,KAY/B,UACE,gBAAC1J,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,OAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,mBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,OACL2E,YAAY,aACZD,MAAOH,EAEPC,SAAU,SAACR,GAAD,OAAO8J,EAAQ9J,EAAES,OAAOC,aAGtC,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,QAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,4BACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,QACL2E,YAAY,cACZD,MAAO4I,EAEP9I,SAAU,SAACR,GAAD,OAAOuJ,EAASvJ,EAAES,OAAOC,aAGvC,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,WAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,uBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,WACL2E,YAAY,iBACZD,MAAO8I,EAEPhJ,SAAU,SAACR,GAAD,OAAOyJ,EAAYzJ,EAAES,OAAOC,aAG1C,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,kBAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,+BACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,WACL2E,YAAY,mBACZD,MAAOqJ,EAEPvJ,SAAU,SAACR,GAAD,OAAOgK,EAAmBhK,EAAES,OAAOC,aAIjD,eAACE,GAAA,EAAD,CAAQP,UAAU,oBAAoBrE,KAAK,SAAS6E,QAAQ,UAA5D,yBAIF,eAACqC,GAAA,EAAD,CAAK7C,UAAU,OAAf,SACE,gBAAC8C,GAAA,EAAD,6BACkB,IAEhB,eAAC,QAAD,CAAMf,GAAIsH,EAAQ,0BAAsBA,GAAa,SAArD,4B,UC6EKS,GArKO,SAAC,GAA0B,EAAxB5B,SAAyB,IAAf7I,EAAc,EAAdA,QACjC,EAAwBC,mBAAS,IAAjC,oBAAOY,EAAP,KAAauJ,EAAb,KACA,EAA0BnK,mBAAS,IAAnC,oBAAO2J,EAAP,KAAcC,EAAd,KACA,EAAgC5J,mBAAS,IAAzC,oBAAO6J,EAAP,KAAiBC,EAAjB,KACA,EAA8C9J,mBAAS,IAAvD,oBAAOoK,EAAP,KAAwBC,EAAxB,KACA,EAA8BrK,mBAAS,MAAvC,oBAAOgC,EAAP,KAAgBsI,EAAhB,KAEMjJ,EAAWa,cAEXjE,EAAckE,aAAY,SAACjG,GAAD,OAAWA,EAAM+B,eAEzC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAIhBH,EAFUoE,aAAY,SAACjG,GAAD,OAAWA,EAAM4B,aAEvCC,SAGAhB,EADkBoF,aAAY,SAACjG,GAAD,OAAWA,EAAMiC,qBAC/CpB,QAEF+B,EAAcqD,aAAY,SAACjG,GAAD,OAAWA,EAAM4C,eAEhC2L,EAA8C3L,EAAvDxC,QAA+BoO,EAAwB5L,EAA/BpC,MAAoBqC,EAAWD,EAAXC,OAEpDgH,qBAAU,WAEHhI,GAGEG,EAAK0C,MAAQ7D,GAChBsE,EAAS,CAAEhF,KAAMvC,KACjBuH,EAASF,GAAe,YACxBE,ECwGN,yCAA4B,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAExBF,EAAS,CACPhF,KAAMjB,KAHgB,EASpBkG,IADWvD,EARS,EAQtBD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY3D,EAAS4D,SAdd,SAmBDC,KAAMC,IAAN,uBAAkCL,GAnBjC,gBAmBhBM,EAnBgB,EAmBhBA,KAERT,EAAS,CACPhF,KAAMhB,GACNkB,QAASuF,IAvBa,kDA0BxBT,EAAS,CACPhF,KAAMf,GAENiB,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhCU,0DAA5B,2DDrGMmI,EAAQjM,EAAK0C,MACbgJ,EAAS1L,EAAKyL,QAThB5J,EAAQS,KAAK,YAYd,CAACa,EAAUtB,EAAShC,EAAUG,EAAK0C,KAAM1C,EAAKyL,MAAO5M,IAaxD,OACE,gBAACwG,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACE,+CAEC/E,GAAW,eAAC,GAAD,CAASd,QAAQ,SAAjB,SAA2Bc,IAEtCjF,GAAW,eAAC,GAAD,CAASmE,QAAQ,UAAjB,6BAEXxE,GAAS,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAAC6D,GAAA,EAAD,CAAMC,SArBU,SAACC,GACrBA,EAAEC,iBACEuJ,IAAaO,EACfE,EAAW,0BAGXjJ,ElBgG2B,SAACnD,GAAD,gDAAU,WAAOmD,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvCF,EAAS,CACPhF,KAAM1C,IAH+B,EASnC2H,IADWvD,EARwB,EAQrCD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAfC,SAoBhBC,KAAM+I,IAAN,qBAAgCzM,EAAMsD,GApBtB,gBAoB/BM,EApB+B,EAoB/BA,KAERT,EAAS,CACPhF,KAAMzC,EACN2C,QAASuF,IAGXT,EAAS,CACPhF,KAAMpD,EACNsD,QAASuF,IAGX5C,aAAauJ,QAAQ,WAAYrJ,KAAKsJ,UAAU5G,IAhCT,kDAkCvCT,EAAS,CACPhF,KAAMxC,EAEN0C,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAxCyB,0DAAV,wDkBhGlB4I,CAAkB,CAAExJ,GAAIlD,EAAK8F,IAAKpD,OAAM+I,QAAOE,eAetD,UACE,gBAAC1J,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,OAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,mBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,OACL2E,YAAY,aACZD,MAAOH,EAEPC,SAAU,SAACR,GAAD,OAAO8J,EAAQ9J,EAAES,OAAOC,aAGtC,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,QAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,4BACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,QACL2E,YAAY,cACZD,MAAO4I,EAEP9I,SAAU,SAACR,GAAD,OAAOuJ,EAASvJ,EAAES,OAAOC,aAGvC,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,WAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,uBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,WACL2E,YAAY,iBACZD,MAAO8I,EAEPhJ,SAAU,SAACR,GAAD,OAAOyJ,EAAYzJ,EAAES,OAAOC,aAG1C,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,kBAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,+BACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,WACL2E,YAAY,mBACZD,MAAOqJ,EAEPvJ,SAAU,SAACR,GAAD,OAAOgK,EAAmBhK,EAAES,OAAOC,aAIjD,eAACE,GAAA,EAAD,CAAQP,UAAU,eAAerE,KAAK,SAAS6E,QAAQ,UAAvD,0BAKJ,gBAACsC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACE,4CACC0D,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAASxJ,QAAQ,SAAjB,SAA2BwJ,IAE3B,gBAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACvK,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,wCACA,uCACA,4CACA,6BAGJ,iCACG3B,EAAOpB,KAAI,SAACc,GAAD,OACV,gCACE,8BAAKA,EAAMuF,MACX,8BAAKvF,EAAMuJ,UAAUC,UAAU,EAAG,MAClC,oCAAMxJ,EAAMyM,cACZ,8BACGzM,EAAM0M,OACL1M,EAAM2M,OAAOnD,UAAU,EAAG,IAE1B,oBAAGvH,UAAU,eAAekD,MAAO,CAAED,MAAO,WAGhD,8BACGlF,EAAM4M,YACL5M,EAAM6M,YAAYrD,UAAU,EAAG,IAE/B,oBAAGvH,UAAU,eAAekD,MAAO,CAAED,MAAO,WAGhD,8BACE,eAAC,iBAAD,CAAelB,GAAE,iBAAYhE,EAAMuF,KAAnC,SACE,eAAC/C,GAAA,EAAD,CAAQP,UAAU,SAASQ,QAAQ,QAAnC,2BApBGzC,EAAMuF,oBE7FhBuH,GA3CO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5C,OACE,gBAAC7I,GAAA,EAAD,CAAKpC,UAAU,8BAAf,UACE,eAACoC,GAAA,EAAII,KAAL,UACGsI,EACC,eAAC,iBAAD,CAAe/I,GAAG,SAAlB,SACE,eAACK,GAAA,EAAIC,KAAL,wBAGF,eAACD,GAAA,EAAIC,KAAL,CAAU8E,UAAQ,EAAlB,uBAGJ,eAAC/E,GAAA,EAAII,KAAL,UACGuI,EACC,eAAC,iBAAD,CAAehJ,GAAG,YAAlB,SACE,eAACK,GAAA,EAAIC,KAAL,yBAGF,eAACD,GAAA,EAAIC,KAAL,CAAU8E,UAAQ,EAAlB,wBAGJ,eAAC/E,GAAA,EAAII,KAAL,UACGwI,EACC,eAAC,iBAAD,CAAejJ,GAAG,WAAlB,SACE,eAACK,GAAA,EAAIC,KAAL,wBAGF,eAACD,GAAA,EAAIC,KAAL,CAAU8E,UAAQ,EAAlB,uBAGJ,eAAC/E,GAAA,EAAII,KAAL,UACGyI,EACC,eAAC,iBAAD,CAAelJ,GAAG,cAAlB,SACE,eAACK,GAAA,EAAIC,KAAL,4BAGF,eAACD,GAAA,EAAIC,KAAL,CAAU8E,UAAQ,EAAlB,+BC+CK+D,GAhFQ,SAAC,GAAiB,IAAf7L,EAAc,EAAdA,QAGhBzC,EADK6E,aAAY,SAACjG,GAAD,OAAWA,EAAMkB,QAClCE,gBAER,EAA8B0C,mBAAS1C,EAAgBuO,SAAvD,oBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAwB9L,mBAAS1C,EAAgByO,MAAjD,oBAAOA,EAAP,KAAaC,EAAb,KACA,EAAoChM,mBAAS1C,EAAgB2O,YAA7D,oBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAA8BlM,mBAAS1C,EAAgB6O,SAAvD,oBAAOA,EAAP,KAAgBC,EAAhB,KAEM/K,EAAWa,cASjB,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAesJ,OAAK,EAACC,OAAK,IAC1B,2CACA,gBAACtL,GAAA,EAAD,CAAMC,SAVY,SAACC,GRiBU,IAACyB,EQhBhCzB,EAAEC,iBACFe,GRegCS,EQfH,CAAE+J,UAASE,OAAME,aAAYE,WRejB,SAAC9K,EAAUC,GACtDD,EAAS,CAAEhF,KAAMvD,EAA4ByD,QAASuF,IAEtD5C,aAAauJ,QAAQ,kBAAmBrJ,KAAKsJ,UAAU5G,OQjBrD/B,EAAQS,KAAK,aAOX,UACE,gBAACL,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,UAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,sBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,OACL2E,YAAY,gBACZD,MAAO8K,EACPQ,UAAQ,EAERxL,SAAU,SAACR,GAAD,OAAOyL,EAAWzL,EAAES,OAAOC,aAIzC,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,OAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,mBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,OACL2E,YAAY,aACZD,MAAOgL,EACPM,UAAQ,EAERxL,SAAU,SAACR,GAAD,OAAO2L,EAAQ3L,EAAES,OAAOC,aAItC,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,cAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,0BACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,OACL2E,YAAY,oBACZD,MAAOkL,EACPI,UAAQ,EAERxL,SAAU,SAACR,GAAD,OAAO6L,EAAc7L,EAAES,OAAOC,aAI5C,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,UAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,sBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,OACL2E,YAAY,gBACZD,MAAOoL,EACPE,UAAQ,EAERxL,SAAU,SAACR,GAAD,OAAO+L,EAAW/L,EAAES,OAAOC,aAIzC,eAACE,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAAUR,UAAU,OAAlD,6BCbO4L,GA3DO,SAAC,GAAiB,IAAfvM,EAAc,EAAdA,QAEVoC,aAAY,SAACjG,GAAD,OAAWA,EAAMkB,QAClCE,iBAGNyC,EAAQS,KAAK,aAGf,MAA0CR,mBAAS,UAAnD,oBAAOnC,EAAP,KAAsB0O,EAAtB,KAEMlL,EAAWa,cASjB,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAesJ,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,iDACA,gBAACvL,GAAA,EAAD,CAAMC,SAVY,SAACC,GTuBQ,IAACyB,EStB9BzB,EAAEC,iBACFe,GTqB8BS,ESrBH,CAAEjE,iBTqBU,SAACwD,EAAUC,GACpDD,EAAS,CAAEhF,KAAMtD,EAA0BwD,QAASuF,IAEpD5C,aAAauJ,QAAQ,gBAAiBrJ,KAAKsJ,UAAU5G,OSvBnD/B,EAAQS,KAAK,gBAOX,UACE,gBAACL,GAAA,EAAK8J,MAAN,WACE,eAAC9J,GAAA,EAAKmI,MAAN,CAAYhE,GAAG,SAAS5D,UAAU,OAAlC,2BAGA,eAAC8C,GAAA,EAAD,UACE,eAACrD,GAAA,EAAKqM,MAAN,CACEnQ,KAAK,QACLoQ,MAAM,wBACNrL,GAAG,SACHR,KAAK,gBACLG,MAAM,SACN2L,SAAO,EAEP7L,SAAU,SAACR,GAAD,OAAOkM,EAAiBlM,EAAES,OAAOC,eAajD,eAACE,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAAUR,UAAU,OAAlD,6B,SCkHOiM,GA5JU,SAAC,GAAiB,IAAf5M,EAAc,EAAdA,QACpBsB,EAAWa,cAEX9E,EAAO+E,aAAY,SAACjG,GAAD,OAAWA,EAAMkB,QAGpCwP,EAAc,SAACC,GACnB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAKtD,QAAQ,IAI/CnM,EAAK4P,WAAaJ,EAChBxP,EAAKC,UAAUgM,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAKmH,MAAQnH,EAAK4J,MAAK,IAGpE/J,EAAK6P,cAAgBL,EAAYxP,EAAK4P,WAAa,IAAM,EAAI,IAE7D5P,EAAK8P,SAAWN,EAAY9D,QAA0B,IAAlB1L,EAAK4P,YAAmBzD,QAAQ,KAEpEnM,EAAK8N,YACHpC,OAAO1L,EAAK4P,YACZlE,OAAO1L,EAAK6P,eACZnE,OAAO1L,EAAK8P,WACZ3D,QAAQ,GAEV,IAAM/K,EAAc2D,aAAY,SAACjG,GAAD,OAAWA,EAAMsC,eACzCC,EAA0BD,EAA1BC,MAAO1B,EAAmByB,EAAnBzB,QAASL,EAAU8B,EAAV9B,MAExBqJ,qBAAU,WACJhJ,GACFgD,EAAQS,KAAR,iBAAuB/B,EAAMuF,QAG9B,CAACjE,EAAShD,IAgBb,OACE,uCACE,eAAC,GAAD,CAAeyO,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,gBAACpI,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,gBAACY,GAAA,EAAD,CAAWzG,QAAQ,QAAnB,UACE,gBAACiM,GAAA,EAAD,WACE,2CACA,+BACE,gDACC/P,EAAKE,gBAAgBuO,QAFxB,KAEmCzO,EAAKE,gBAAgByO,KAFxD,IAE+D,IAC5D3O,EAAKE,gBAAgB2O,WAHxB,IAGqC,IAClC7O,EAAKE,gBAAgB6O,cAI1B,gBAACgB,GAAA,EAAD,WACE,iDACA,+CACC/P,EAAKS,cAAcA,iBAGtB,gBAACsP,GAAA,EAAD,WACE,8CAC2B,IAA1B/P,EAAKC,UAAUyK,OACd,eAAC,GAAD,iCAEA,eAACH,GAAA,EAAD,CAAWzG,QAAQ,QAAnB,SAEG9D,EAAKC,UAAUM,KAAI,SAACJ,EAAM6P,GAAP,OAClB,eAACD,GAAA,EAAD,UACE,gBAAC5J,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,eAACb,GAAA,EAAD,CACEhC,IAAK3G,EAAK4G,MACVgC,IAAK5I,EAAKqD,KACVwF,OAAK,EACLgD,SAAO,MAGX,eAAC5F,GAAA,EAAD,UACE,eAAC,QAAD,CAAMf,GAAE,mBAAclF,EAAKX,SAA3B,SACGW,EAAKqD,SAGV,gBAAC4C,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACGxJ,EAAK4J,IADR,OACiB5J,EAAKmH,MADtB,OACiCnH,EAAK4J,IAAM5J,EAAKmH,aAhBjC0I,gBA0BhC,eAAC5J,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,eAAChD,GAAA,EAAD,UACE,gBAAC4D,GAAA,EAAD,CAAWzG,QAAQ,QAAnB,UACE,eAACiM,GAAA,EAAD,UACE,kDAEF,eAACA,GAAA,EAAD,UACE,gBAAC5J,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOpG,EAAK4P,mBAGhB,eAACG,GAAA,EAAD,UACE,gBAAC5J,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,eAAOpG,EAAK6P,sBAGhB,eAACE,GAAA,EAAD,UACE,gBAAC5J,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,eAAOpG,EAAK8P,iBAGhB,eAACC,GAAA,EAAD,UACE,gBAAC5J,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOpG,EAAK8N,mBAGhB,eAACiC,GAAA,EAAD,UACGzQ,GAAS,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,MAEvC,eAACyQ,GAAA,EAAD,UACE,eAAClM,GAAA,EAAD,CACE5E,KAAK,SACLqE,UAAU,kBACVmH,SAA6B,IAAnBzK,EAAKC,UACf8F,QA5GU,WACxB9B,EJ7BuB,SAAC5C,GAAD,gDAAW,WAAO4C,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CACPhF,KAAM3B,KAH0B,EAS9B4G,IADWvD,EARmB,EAQhCD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAfJ,SAoBXC,KAAMuG,KAAN,cAA0B1J,EAAO+C,GApBtB,gBAoB1BM,EApB0B,EAoB1BA,KAERT,EAAS,CACPhF,KAAM1B,GACN4B,QAASuF,IAxBuB,kDA2BlCT,EAAS,CACPhF,KAAMzB,GAEN2B,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAjCoB,0DAAX,wDI8BrBqL,CAAY,CACV1O,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cAAcA,cAClCmP,WAAY5P,EAAK4P,WACjBC,cAAe7P,EAAK6P,cACpBC,SAAU9P,EAAK8P,SACfhC,WAAY9N,EAAK8N,eA+FT,yC,SC6FDoC,GA9NK,SAAC,GAAwB,IAAtB1G,EAAqB,EAArBA,MAAO7G,EAAc,EAAdA,QACtBwN,EAAU3G,EAAMC,OAAOzF,GAE7B,EAAgCpB,oBAAS,GAAzC,oBAAOwN,EAAP,KAAiBC,EAAjB,KAEMpM,EAAWa,cAITnE,EADUoE,aAAY,SAACjG,GAAD,OAAWA,EAAM4B,aACvCC,SAEFW,EAAeyD,aAAY,SAACjG,GAAD,OAAWA,EAAMwC,gBAC1CD,EAA0BC,EAA1BD,MAAOnC,EAAmBoC,EAAnBpC,QAASI,EAAUgC,EAAVhC,MAElBkC,EAAWuD,aAAY,SAACjG,GAAD,OAAWA,EAAM0C,YAC7B8O,EAAoC9O,EAA7C7B,QAA8B4Q,EAAe/O,EAAxBtC,QAEvBuC,EAAesD,aAAY,SAACjG,GAAD,OAAWA,EAAM2C,gBACjC+O,EAA4C/O,EAArD9B,QAAkC8Q,EAAmBhP,EAA5BvC,QAEjC,IAAKA,EAAS,CAEZ,IAAMsQ,EAAc,SAACC,GACnB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAKtD,QAAQ,IAI/C9K,EAAMuO,WAAaJ,EACjBnO,EAAME,WAAW0K,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAKmH,MAAQnH,EAAK4J,MAAK,IAGtE1I,EAAMyO,SAAWN,EAAY9D,QAA2B,IAAnBrK,EAAMuO,YAAmBzD,QAAQ,KAGxExD,qBAAU,WACHhI,GACHgC,EAAQS,KAAK,UAGf,ILH4BY,EKGtB0M,EAAe,yCAAG,iCAAAvM,EAAA,sEACWK,KAAMC,IAAI,sBADrB,gBACRkM,EADQ,EACdjM,MACFkM,EAASC,SAASC,cAAc,WAC/B7R,KAAO,kBACd2R,EAAO9J,IAAP,kDAAwD6J,GACxDC,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACdX,GAAY,IAEdQ,SAASI,KAAKC,YAAYN,GATJ,4CAAH,sDAYhBvP,GAASA,EAAMuF,MAAQuJ,GAAWG,GAAcE,GAEnDvM,EAAS,CAAEhF,KAAMlB,KACjBkG,EAAS,CAAEhF,KAAMP,KACjBuF,GLnB0BD,EKmBDmM,ELnBA,yCAAQ,WAAOlM,EAAUC,GAAjB,wBAAAC,EAAA,sEAEnCF,EAAS,CACPhF,KAAMxB,KAH2B,EAS/ByG,IADWvD,EARoB,EAQjCD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAfH,SAoBZC,KAAMC,IAAN,sBAAyBT,GAAMI,GApBnB,gBAoB3BM,EApB2B,EAoB3BA,KAERT,EAAS,CACPhF,KAAMvB,GACNyB,QAASuF,IAxBwB,kDA2BnCT,EAAS,CACPhF,KAAMtB,GAENwB,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAjCqB,0DAAR,2DKoBfvD,EAAM0M,SACXoD,OAAOC,OAGVf,GAAY,GAFZK,OAKH,CAACzM,EAAUkM,EAAS9O,EAAOiP,EAAYE,EAAgB7N,EAAShC,IAWnE,OAAOzB,EACL,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,uCACE,yCAAW+B,EAAMuF,OACjB,gBAACT,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,gBAACY,GAAA,EAAD,CAAWzG,QAAQ,QAAnB,UACE,gBAACiM,GAAA,EAAD,WACE,2CACA,+BACE,6CADF,IAC2B1O,EAAMP,KAAK0C,QAGtC,+BACE,8CACA,oBAAG6N,KAAI,iBAAYhQ,EAAMP,KAAKyL,OAA9B,SAAwClL,EAAMP,KAAKyL,WAErD,+BACE,gDACClL,EAAMnB,gBAAgBuO,QAFzB,KAEoCpN,EAAMnB,gBAAgByO,KAF1D,IAEiE,IAC9DtN,EAAMnB,gBAAgB2O,WAHzB,IAGsC,IACnCxN,EAAMnB,gBAAgB6O,WAExB1N,EAAM4M,YACL,gBAAC,GAAD,CAASnK,QAAQ,UAAjB,0BACgBzC,EAAM6M,eAGtB,eAAC,GAAD,CAASpK,QAAQ,SAAjB,8BAIJ,gBAACiM,GAAA,EAAD,WACE,iDACA,+BACE,+CACC1O,EAAMZ,iBAERY,EAAM0M,OACL,gBAAC,GAAD,CAASjK,QAAQ,UAAjB,qBAAoCzC,EAAM2M,UAE1C,eAAC,GAAD,CAASlK,QAAQ,SAAjB,yBAIJ,gBAACiM,GAAA,EAAD,WACE,8CAC6B,IAA5B1O,EAAME,WAAWmJ,OAChB,eAAC,GAAD,6BAEA,eAACH,GAAA,EAAD,CAAWzG,QAAQ,QAAnB,SAEGzC,EAAME,WAAWhB,KAAI,SAACJ,EAAM6P,GAAP,OACpB,eAACD,GAAA,EAAD,UACE,gBAAC5J,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,eAACb,GAAA,EAAD,CACEhC,IAAK3G,EAAK4G,MACVgC,IAAK5I,EAAKqD,KACVwF,OAAK,EACLgD,SAAO,MAGX,eAAC5F,GAAA,EAAD,UACE,eAAC,QAAD,CAAMf,GAAE,mBAAclF,EAAKX,SAA3B,SACGW,EAAKqD,SAGV,gBAAC4C,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACGxJ,EAAK4J,IADR,OACiB5J,EAAKmH,MADtB,OACiCnH,EAAK4J,IAAM5J,EAAKmH,aAhBjC0I,gBA0BhC,eAAC5J,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,eAAChD,GAAA,EAAD,UACE,gBAAC4D,GAAA,EAAD,CAAWzG,QAAQ,QAAnB,UACE,eAACiM,GAAA,EAAD,UACE,kDAEF,eAACA,GAAA,EAAD,UACE,gBAAC5J,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAO/E,EAAMuO,mBAGjB,eAACG,GAAA,EAAD,UACE,gBAAC5J,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,eAAO/E,EAAMwO,sBAGjB,eAACE,GAAA,EAAD,UACE,gBAAC5J,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,eAAO/E,EAAMyO,iBAGjB,eAACC,GAAA,EAAD,UACE,gBAAC5J,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAO/E,EAAMyM,oBAGfzM,EAAM0M,QACN,gBAACgC,GAAA,EAAD,WACGQ,GAAc,eAAC,GAAD,IACbH,EAGA,eAAC,gBAAD,CACEkB,OAAQjQ,EAAMyM,WACdyD,UAjIU,SAACC,GAC7B5F,QAAQC,IAAI2F,GACZvN,ELSF,SAACkM,EAASqB,GAAV,gDAA4B,WAAOvN,EAAUC,GAAjB,wBAAAC,EAAA,sEAExBF,EAAS,CACPhF,KAAMrB,KAHgB,EASpBsG,IADWvD,EARS,EAQtBD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAfd,SAoBDC,KAAM+I,IAAN,sBACN4C,EADM,QAErBqB,EACApN,GAvBsB,gBAoBhBM,EApBgB,EAoBhBA,KAMRT,EAAS,CACPhF,KAAMpB,GACNsB,QAASuF,IA5Ba,kDA+BxBT,EAAS,CACPhF,KAAMnB,GAENqB,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UArCU,0DAA5B,wDKTW6M,CAAStB,EAASqB,OA2HX,eAAC,GAAD,OASLf,GAAkB,eAAC,GAAD,IAClB9P,GACCA,EAASsF,SACT5E,EAAM0M,SACL1M,EAAM4M,aACL,eAAC1D,GAAA,EAAUzE,KAAX,UACE,eAACjC,GAAA,EAAD,CACE5E,KAAK,SACLqE,UAAU,gBACVyC,QA1IG,WACrB9B,EL8HwB,SAAC5C,GAAD,gDAAW,WAAO4C,EAAUC,GAAjB,wBAAAC,EAAA,sEAEnCF,EAAS,CACPhF,KAAMV,KAH2B,EAQ/B2F,IADWvD,EAPoB,EAOjCD,UAAaC,SAGTyD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY3D,EAAS4D,SAZH,SAgBZC,KAAM+I,IAAN,sBACNlM,EAAMuF,IADA,YAErB,GACAxC,GAnBiC,gBAgB3BM,EAhB2B,EAgB3BA,KAMRT,EAAS,CACPhF,KAAMT,GACNW,QAASuF,IAxBwB,kDA2BnCT,EAAS,CACPhF,KAAMR,GAENU,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAjCqB,0DAAX,wDK9Hf8M,CAAarQ,KAsIN,+CC7ILsQ,GAlFQ,SAAC,GAAiB,IAAfhP,EAAc,EAAdA,QAClBsB,EAAWa,cAEX9D,EAAW+D,aAAY,SAACjG,GAAD,OAAWA,EAAMkC,YACtC9B,EAA0B8B,EAA1B9B,QAASI,EAAiB0B,EAAjB1B,MAAO2B,EAAUD,EAAVC,MAGhBN,EADUoE,aAAY,SAACjG,GAAD,OAAWA,EAAM4B,aACvCC,SAGSiR,EADE7M,aAAY,SAACjG,GAAD,OAAWA,EAAMoC,cACxCvB,QAERgJ,qBAAU,WACJhI,GAAYA,EAASsF,QACvBhC,EzBkLmB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE3BF,EAAS,CACPhF,KAAMtC,KAHmB,EASvBuH,IADWvD,EARY,EAQzBD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY3D,EAAS4D,SAdX,SAkBJC,KAAMC,IAAN,aAAwBL,GAlBpB,gBAkBnBM,EAlBmB,EAkBnBA,KAERT,EAAS,CACPhF,KAAMrC,GACNuC,QAASuF,IAtBgB,kDAyB3BT,EAAS,CACPhF,KAAMpC,GAENsC,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA/Ba,0DAAN,yDyBhLnBjC,EAAQS,KAAK,YAEd,CAACa,EAAUtB,EAASiP,EAAejR,IAEtC,IAAMkR,EAAgB,SAAC7N,GACjBmN,OAAOW,QAAQ,kBACjB7N,EzB+MoB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE9BF,EAAS,CACPhF,KAAMlC,KAHsB,EAS1BmH,IADWvD,EARe,EAQ5BD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY3D,EAAS4D,SAdR,SAkBxBC,KAAMuN,OAAN,qBAA2B/N,GAAMI,GAlBT,OAoB9BH,EAAS,CACPhF,KAAMjC,KArBsB,gDAwB9BiH,EAAS,CACPhF,KAAMhC,GAENkC,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA9BgB,yDAAR,wDyB/MXoN,CAAWhO,KAIxB,OACE,uCACE,wCACC9E,EACC,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,gBAACmO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACvK,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,wCACA,wCACA,6BAGJ,iCACGrC,EAAMV,KAAI,SAACO,GAAD,OACT,gCACE,8BAAKA,EAAK8F,MACV,8BAAK9F,EAAK0C,OACV,8BACE,oBAAG6N,KAAI,iBAAYvQ,EAAKyL,OAAxB,SAAkCzL,EAAKyL,UAEzC,8BACGzL,EAAKmF,QACJ,oBAAG3C,UAAU,eAAekD,MAAO,CAAED,MAAO,WAE5C,oBAAGjD,UAAU,eAAekD,MAAO,CAAED,MAAO,WAGhD,gCACE,eAAC,iBAAD,CAAelB,GAAE,sBAAiBvE,EAAK8F,IAAtB,SAAjB,SACE,eAAC/C,GAAA,EAAD,CAAQC,QAAQ,QAAQR,UAAU,SAAlC,SACE,oBAAGA,UAAU,oBAGjB,eAACO,GAAA,EAAD,CACEC,QAAQ,SACRR,UAAU,SACVyC,QAAS,kBAAM8L,EAAc/Q,EAAK8F,MAHpC,SAKE,oBAAGtD,UAAU,wBAxBVxC,EAAK8F,iBCoDbqL,GAhGQ,SAAC,GAAwB,IAAtBzI,EAAqB,EAArBA,MAAO7G,EAAc,EAAdA,QACzBuP,EAAS1I,EAAMC,OAAOzF,GAC5B,EAAwBpB,mBAAS,IAAjC,oBAAOY,EAAP,KAAauJ,EAAb,KACA,EAA0BnK,mBAAS,IAAnC,oBAAO2J,EAAP,KAAcC,EAAd,KACA,EAA8B5J,oBAAS,GAAvC,oBAAOqD,EAAP,KAAgBkM,EAAhB,KAEMlO,EAAWa,cAEXjE,EAAckE,aAAY,SAACjG,GAAD,OAAWA,EAAM+B,eACzC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAElBK,EAAa4D,aAAY,SAACjG,GAAD,OAAWA,EAAMqC,cAErCiR,EAGPjR,EAHFjC,QACOmT,EAELlR,EAFF7B,MACSgT,EACPnR,EADFxB,QAGFgJ,qBAAU,WACJ2J,GACFrO,EAAS,CAAEhF,KAAM5B,KACjBsF,EAAQS,KAAK,oBAERtC,EAAK0C,MAAQ1C,EAAK8F,MAAQsL,GAG7BnF,EAAQjM,EAAK0C,MACbgJ,EAAS1L,EAAKyL,OACd4F,EAAWrR,EAAKmF,UAJhBhC,EAASF,GAAemO,MAO3B,CAACpR,EAAMmD,EAAUiO,EAAQvP,EAAS2P,IAOrC,OACE,uCACE,eAAC,QAAD,CAAMjN,GAAG,kBAAkB/B,UAAU,qBAArC,qBAGA,gBAAC,GAAD,WACE,4CACC8O,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASvO,QAAQ,SAAjB,SAA2BuO,IAC1CnT,EACC,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,gBAACyD,GAAA,EAAD,CAAMC,SAnBQ,SAACC,GACrBA,EAAEC,iBACFe,E1BoOsB,SAACnD,GAAD,gDAAU,WAAOmD,EAAUC,GAAjB,wBAAAC,EAAA,sEAEhCF,EAAS,CACPhF,KAAM/B,KAHwB,EAS5BgH,IADWvD,EARiB,EAQ9BD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAfN,SAmBTC,KAAM+I,IAAN,qBAAwBzM,EAAK8F,KAAO9F,EAAMsD,GAnBjC,gBAmBxBM,EAnBwB,EAmBxBA,KAERT,EAAS,CACPhF,KAAM9B,KAIR8G,EAAS,CACPhF,KAAM7C,EACN+C,QAASuF,IA5BqB,kDA+BhCT,EAAS,CACPhF,KAAM7B,GAEN+B,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UArCkB,0DAAV,wD0BpOb2N,CAAW,CAAE3L,IAAKsL,EAAQ1O,OAAM+I,QAAOtG,cAiB1C,UACE,gBAAClD,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,OAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,mBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,OACL2E,YAAY,aACZD,MAAOH,EAEPC,SAAU,SAACR,GAAD,OAAO8J,EAAQ9J,EAAES,OAAOC,aAGtC,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,QAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,4BACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,QACL2E,YAAY,cACZD,MAAO4I,EAEP9I,SAAU,SAACR,GAAD,OAAOuJ,EAASvJ,EAAES,OAAOC,aAGvC,eAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,UAAU3H,UAAU,OAA1C,SACE,eAACP,GAAA,EAAKqM,MAAN,CACEnQ,KAAK,WACLoQ,MAAM,YACNC,QAASrJ,EAETxC,SAAU,SAACR,GAAD,OAAOkP,EAAWlP,EAAES,OAAO4L,cAGzC,eAACzL,GAAA,EAAD,CACEP,UAAU,oBACVrE,KAAK,SACL6E,QAAQ,UAHV,8BC8CG0O,GA5HW,SAAC,GAAwB,IAAtB7P,EAAqB,EAArBA,QACrB6F,EAD0C,EAAZgB,MACXC,OAAOjB,YAAc,EACxCvE,EAAWa,cAEXjG,EAAckG,aAAY,SAACjG,GAAD,OAAWA,EAAMD,eACzCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KAEnCK,EAAgBqF,aAAY,SAACjG,GAAD,OAAWA,EAAMY,iBAExC+S,EAGP/S,EAHFR,QACOwT,EAELhT,EAFFJ,MACSsS,EACPlS,EADFC,QAGIC,EAAgBmF,aAAY,SAACjG,GAAD,OAAWA,EAAMc,iBAExC+S,EAIP/S,EAJFV,QACO0T,EAGLhT,EAHFN,MACSuT,EAEPjT,EAFFD,QACSmT,EACPlT,EADFJ,QAIMmB,EADUoE,aAAY,SAACjG,GAAD,OAAWA,EAAM4B,aACvCC,SAERgI,qBAAU,WACR1E,EAAS,CAAEhF,KAAMrE,IAEZ+F,EAASsF,SACZtD,EAAQS,KAAK,UAIXyP,EACFlQ,EAAQS,KAAR,yBAA+B0P,EAAelM,IAA9C,UAEA3C,EAASsE,GAAa,GAAIC,MAE3B,CACDvE,EACAtB,EACAhC,EACAiR,EACAiB,EACAC,EACAtK,IAGF,IAIMqJ,EAAgB,SAAC7N,GACjBmN,OAAOW,QAAQ,kBACjB7N,EnBKuB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAEjCF,EAAS,CACPhF,KAAM3E,IAHyB,EAS7B4J,IADWvD,EARkB,EAQ/BD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY3D,EAAS4D,SAdL,SAkB3BC,KAAMuN,OAAN,wBAA8B/N,GAAMI,GAlBT,OAoBjCH,EAAS,CACPhF,KAAM1E,IArByB,gDAwBjC0J,EAAS,CACPhF,KAAMzE,EAEN2E,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA9BmB,yDAAR,wDmBLdmO,CAAc/O,KAI3B,OACE,uCACE,gBAACmC,GAAA,EAAD,CAAK7C,UAAU,qBAAf,UACE,eAAC8C,GAAA,EAAD,UACE,6CAEF,eAACA,GAAA,EAAD,CAAK9C,UAAU,WAAf,SACE,gBAACO,GAAA,EAAD,CAAQP,UAAU,OAAOyC,QAjBJ,WAC3B9B,EnB6CyB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACPhF,KAAMxE,IAHuB,EAS3ByJ,IADWvD,EARgB,EAQ7BD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY3D,EAAS4D,SAdP,SAkBRC,KAAMuG,KAAN,gBAA4B,GAAI3G,GAlBxB,gBAkBvBM,EAlBuB,EAkBvBA,KAERT,EAAS,CACPhF,KAAMvE,EACNyE,QAASuF,IAtBoB,kDAyB/BT,EAAS,CACPhF,KAAMtE,EAENwE,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA/BiB,0DAAN,0DmB7BnB,UACE,oBAAGtB,UAAU,gBADf,0BAKHmP,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS5O,QAAQ,SAAjB,SAA2B4O,IAC1CC,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS9O,QAAQ,SAAjB,SAA2B4O,IAC1CxT,EACC,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,uCACE,gBAACmO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACvK,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,wCACA,2CACA,wCACA,6BAGJ,iCACGvE,EAASwB,KAAI,SAACf,GAAD,OACZ,gCACE,8BAAKA,EAAQoH,MACb,8BAAKpH,EAAQgE,OACb,oCAAMhE,EAAQ8H,SACd,8BAAK9H,EAAQwT,WACb,8BAAKxT,EAAQyT,QACb,gCACE,eAAC,iBAAD,CAAe5N,GAAE,yBAAoB7F,EAAQoH,IAA5B,SAAjB,SACE,eAAC/C,GAAA,EAAD,CAAQC,QAAQ,QAAQR,UAAU,SAAlC,SACE,oBAAGA,UAAU,oBAGjB,eAACO,GAAA,EAAD,CACEC,QAAQ,SACRR,UAAU,SACVyC,QAAS,kBAAM8L,EAAcrS,EAAQoH,MAHvC,SAKE,oBAAGtD,UAAU,wBAjBV9D,EAAQoH,aAwBvB,eAAC,GAAD,CAAUxH,MAAOA,EAAOC,KAAMA,EAAM4G,SAAS,WC0ExCiN,GAlMW,SAAC,GAAwB,IAAtB1J,EAAqB,EAArBA,MAAO7G,EAAc,EAAdA,QAC5BmI,EAAYtB,EAAMC,OAAOzF,GAC/B,EAAwBpB,mBAAS,IAAjC,oBAAOY,EAAP,KAAauJ,EAAb,KACA,EAA0BnK,mBAAS,GAAnC,oBAAO0E,EAAP,KAAc6L,EAAd,KACA,EAA0BvQ,mBAAS,IAAnC,oBAAOmE,EAAP,KAAcqM,EAAd,KACA,EAA0BxQ,mBAAS,IAAnC,oBAAOqQ,EAAP,KAAcI,EAAd,KACA,EAAwCzQ,mBAAS,GAAjD,oBAAO4H,EAAP,KAAqB8I,EAArB,KACA,EAAgC1Q,mBAAS,IAAzC,oBAAOoQ,EAAP,KAAiBO,EAAjB,KACA,EAAsC3Q,mBAAS,IAA/C,oBAAOuG,EAAP,KAAoBqK,EAApB,KACA,EAAkC5Q,oBAAS,GAA3C,oBAAO6Q,EAAP,KAAkBC,EAAlB,KAEMzP,EAAWa,cAEXvF,EAAiBwF,aAAY,SAACjG,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAElBK,EAAgBkF,aAAY,SAACjG,GAAD,OAAWA,EAAMe,iBAExCuS,EAGPvS,EAHFX,QACOmT,EAELxS,EAFFP,MACSgT,EACPzS,EADFF,QAGFgJ,qBAAU,WACJ2J,GACFrO,EAAS,CAAEhF,KAAMjE,IACjB2H,EAAQS,KAAK,uBAER5D,EAAQgE,MAAQhE,EAAQoH,MAAQkE,GAGnCiC,EAAQvN,EAAQgE,MAChB2P,EAAS3T,EAAQ8H,OACjB8L,EAAS5T,EAAQuH,OACjBsM,EAAS7T,EAAQyT,OACjBK,EAAgB9T,EAAQgL,cACxB+I,EAAY/T,EAAQwT,UACpBQ,EAAehU,EAAQ2J,cARvBlF,EAASwE,GAAmBqC,MAW/B,CAAC7G,EAAU6G,EAAWtL,EAAS8S,EAAe3P,IAEjD,IAAMgR,EAAiB,yCAAG,WAAO1Q,GAAP,wBAAAkB,EAAA,6DAElByP,EAAO3Q,EAAES,OAAOmQ,MAAM,IACtBC,EAAW,IAAIC,UAEZC,OAAO,QAASJ,GACzBF,GAAa,GANW,SAShBtP,EAAS,CACbC,QAAS,CACP,eAAgB,wBAXE,SAeCG,KAAMuG,KAAK,cAAe+I,EAAU1P,GAfrC,gBAedM,EAfc,EAedA,KAER0O,EAAS1O,GACTgP,GAAa,GAlBS,kDAoBtB9H,QAAQtM,MAAR,MACAoU,GAAa,GArBS,0DAAH,sDAyCvB,OACE,uCACE,eAAC,QAAD,CAAMrO,GAAG,qBAAqB/B,UAAU,qBAAxC,qBAGA,gBAAC,GAAD,WACE,+CACC8O,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASvO,QAAQ,SAAjB,SAA2BuO,IAC1CnT,EACC,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,gBAACyD,GAAA,EAAD,CAAMC,SA9BQ,SAACC,GACrBA,EAAEC,iBACFe,EpBgEyB,SAACzE,GAAD,gDAAa,WAAOyE,EAAUC,GAAjB,wBAAAC,EAAA,sEAEtCF,EAAS,CACPhF,KAAMpE,IAH8B,EASlCqJ,IADWvD,EARuB,EAQpCD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAfA,SAmBfC,KAAM+I,IAAN,wBACJ/N,EAAQoH,KACzBpH,EACA4E,GAtBoC,gBAmB9BM,EAnB8B,EAmB9BA,KAMRT,EAAS,CACPhF,KAAMnE,EACNqE,QAASuF,IA3B2B,kDA8BtCT,EAAS,CACPhF,KAAMlE,EAENoE,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UApCwB,0DAAb,wDoB/DvBqP,CAAc,CACZrN,IAAKkE,EACLtH,OACA8D,QACA2L,QACAlM,QACAiM,WACA7J,cACAqB,mBAmBE,UACE,gBAACzH,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,OAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,mBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,OACL2E,YAAY,aACZD,MAAOH,EAEPC,SAAU,SAACR,GAAD,OAAO8J,EAAQ9J,EAAES,OAAOC,aAItC,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,QAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,oBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,QACL2E,YAAY,cACZD,MAAO2D,EAEP7D,SAAU,SAACR,GAAD,OAAOkQ,EAASlQ,EAAES,OAAOC,aAIvC,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,QAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,oBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,OACL2E,YAAY,kBACZD,MAAOoD,EACPtD,SAAU,SAACR,GAAD,OAAOmQ,EAASnQ,EAAES,OAAOC,UAErC,eAACZ,GAAA,EAAKmR,KAAN,CACElQ,GAAG,aACHmQ,QAAM,EACN1Q,SAAUkQ,IAEXF,GAAa,eAAC,GAAD,OAGhB,gBAAC1Q,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,QAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,oBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,QACL2E,YAAY,cACZD,MAAOsP,EAEPxP,SAAU,SAACR,GAAD,OAAOoQ,EAASpQ,EAAES,OAAOC,aAIvC,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,eAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,6BACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,eACL2E,YAAY,uBACZD,MAAO6G,EAEP/G,SAAU,SAACR,GAAD,OAAOqQ,EAAgBrQ,EAAES,OAAOC,aAI9C,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,WAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,wBACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,WACL2E,YAAY,iBACZD,MAAOqP,EAEPvP,SAAU,SAACR,GAAD,OAAOsQ,EAAYtQ,EAAES,OAAOC,aAI1C,gBAACZ,GAAA,EAAK8J,MAAN,CAAY5B,UAAU,cAAtB,UACE,eAAClI,GAAA,EAAKmI,MAAN,2BACA,eAACnI,GAAA,EAAKQ,QAAN,CACEtE,KAAK,cACL2E,YAAY,oBACZD,MAAOwF,EAEP1F,SAAU,SAACR,GAAD,OAAOuQ,EAAevQ,EAAES,OAAOC,aAI7C,eAACE,GAAA,EAAD,CACEP,UAAU,oBACVrE,KAAK,SACL6E,QAAQ,UAHV,8BC7GGsQ,GA1ES,SAAC,GAAiB,IAAfzR,EAAc,EAAdA,QACnBsB,EAAWa,cAEXlD,EAAYmD,aAAY,SAACjG,GAAD,OAAWA,EAAM8C,aACvC1C,EAA2B0C,EAA3B1C,QAASI,EAAkBsC,EAAlBtC,MAAOqC,EAAWC,EAAXD,OAGhBhB,EADUoE,aAAY,SAACjG,GAAD,OAAWA,EAAM4B,aACvCC,SAUR,OARAgI,qBAAU,WACJhI,GAAYA,EAASsF,QACvBhC,EVsKJ,yCAA4B,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAExBF,EAAS,CACPhF,KAAMb,KAHgB,EASpB8F,IADWvD,EARS,EAQtBD,UAAaC,SAITyD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY3D,EAAS4D,SAdd,SAmBDC,KAAMC,IAAN,cAAyBL,GAnBxB,gBAmBhBM,EAnBgB,EAmBhBA,KAERT,EAAS,CACPhF,KAAMZ,GACNc,QAASuF,IAvBa,kDA0BxBT,EAAS,CACPhF,KAAMX,GAENa,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhCU,0DAA5B,yDUpKIjC,EAAQS,KAAK,YAEd,CAACa,EAAUtB,EAAShC,IAGrB,uCACE,yCACCzB,EACC,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,gBAACmO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACvK,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,uCACA,8CACA,uCACA,4CACA,6BAGJ,iCACG3B,EAAOpB,KAAI,SAACc,GAAD,OACV,gCACE,8BAAKA,EAAMuF,MACX,8BAAKvF,EAAMP,MAAQO,EAAMP,KAAK0C,OAC9B,8BAAKnC,EAAMuJ,UAAUC,UAAU,EAAG,MAClC,oCAAMxJ,EAAMyM,cACZ,8BACGzM,EAAM0M,OACL1M,EAAM2M,OAAOnD,UAAU,EAAG,IAE1B,oBAAGvH,UAAU,eAAekD,MAAO,CAAED,MAAO,WAGhD,8BACGlF,EAAM4M,YACL5M,EAAM6M,YAAYrD,UAAU,EAAG,IAE/B,oBAAGvH,UAAU,eAAekD,MAAO,CAAED,MAAO,WAGhD,8BACE,eAAC,iBAAD,CAAelB,GAAE,iBAAYhE,EAAMuF,IAAlB,SAAjB,SACE,eAAC/C,GAAA,EAAD,CAAQC,QAAQ,QAAQR,UAAU,SAAlC,2BArBGjC,EAAMuF,iBCkBdyN,GA5CH,WACV,OACE,gBAAC,iBAAD,WACE,eAAC,GAAD,IACA,uBAAM/Q,UAAU,OAAhB,SACE,gBAAC8B,GAAA,EAAD,WACE,eAAC,KAAD,CAAOkP,KAAK,eAAeC,UAAWzK,KACtC,eAAC,KAAD,CAAOwK,KAAK,SAASC,UAAWjI,KAChC,eAAC,KAAD,CAAOgI,KAAK,YAAYC,UAAW/F,KACnC,eAAC,KAAD,CAAO8F,KAAK,WAAWC,UAAWrF,KAClC,eAAC,KAAD,CAAOoF,KAAK,cAAcC,UAAWhF,KACrC,eAAC,KAAD,CAAO+E,KAAK,aAAaC,UAAWrE,KACpC,eAAC,KAAD,CAAOoE,KAAK,YAAYC,UAAWzH,KACnC,eAAC,KAAD,CAAOwH,KAAK,WAAWC,UAAWnH,KAClC,eAAC,KAAD,CAAOkH,KAAK,aAAaC,UAAWhJ,KACpC,eAAC,KAAD,CAAO+I,KAAK,kBAAkBC,UAAW5C,KACzC,eAAC,KAAD,CAAO2C,KAAK,uBAAuBC,UAAWtC,KAC9C,eAAC,KAAD,CACEqC,KAAK,qBACLC,UAAW/B,GACXgC,OAAK,IAEP,eAAC,KAAD,CACEF,KAAK,iCACLC,UAAW/B,GACXgC,OAAK,IAEP,eAAC,KAAD,CAAOF,KAAK,mBAAmBC,UAAWH,KAC1C,eAAC,KAAD,CAAOE,KAAK,0BAA0BC,UAAWrB,KACjD,eAAC,KAAD,CAAOoB,KAAK,mBAAmBC,UAAWhL,GAAYiL,OAAK,IAC3D,eAAC,KAAD,CAAOF,KAAK,oBAAoBC,UAAWhL,GAAYiL,OAAK,IAC5D,eAAC,KAAD,CACEF,KAAK,oCACLC,UAAWhL,GACXiL,OAAK,IAEP,eAAC,KAAD,CAAOF,KAAK,IAAIC,UAAWhL,GAAYiL,OAAK,SAGhD,eAAC,GAAD,QChDSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASzP,OACP,eAAC,IAAD,CAAUnD,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFuO,SAASsE,eAAe,SAM1BV,M","file":"static/js/main.3502bef5.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_LIST_MY_RESET';\r\n","// Connect reducers and middleware\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsrReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers';\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsrReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\n// If found in local storage, parse the JSON, if not, return an empty array\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\n\r\n// If found in local storage, parse the JSON, if not, return null\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\n// If shipping address found in local storage, parse the JSON to return it, if not, return empty\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {};\r\n\r\n// If payment method found in local storage, parse the JSON to return it, if not, return empty\r\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod')\r\n  ? JSON.parse(localStorage.getItem('paymentMethod'))\r\n  : {};\r\n\r\n// Initialise the state with the local storage cart items,  s hipping address and user info\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n    paymentMethod: paymentMethodFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n} from '../constants/productConstants';\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the product list (request list, return list, can't retrieve list)\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the product object  (request product, return product, can't retrieve product)\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      // Spread the state to use whatever is in the current state\r\n      return { loading: true, ...state };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the product object  (request product, return product, can't retrieve product)\r\nexport const productDeleteReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      // Spread the state to use whatever is in the current state\r\n      return { loading: true, ...state };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the product object  (request product, return product, can't retrieve product)\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      // Spread the state to use whatever is in the current state\r\n      return { loading: true, ...state };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the product object  (request product, return product, can't retrieve product)\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      // Spread the state to use whatever is in the current state\r\n      return { loading: true, ...state };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the product object  (request product, return product, can't retrieve product)\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      // Spread the state to use whatever is in the current state\r\n      return { loading: true, ...state };\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the product object  (request product, return product, can't retrieve product)\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      // Spread the state to use whatever is in the current state\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      // For each of the items in the current cart state where the product ID is equal to the current item in the state then true\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        // If it does exist, take the current cart items and if they equal the existing cart items then return the item, if not, return the new item x\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        // If it doesn't exist, take the current state and add the new item\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        // Strip out the id of the item that we remove\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        // The data that is passed in on the form as the payload\r\n        shippingAddress: action.payload,\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        // The data that is passed in on the form as the payload\r\n        paymentMethod: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the user login (login request, login fail, login success, logout)\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the user login (login request, login fail, login success, logout)\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the user login (login request, login fail, login success, logout)\r\nexport const userDetailsrReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      // Empties the state\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the user login (login request, login fail, login success, logout)\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the user login (login request, login fail, login success, logout)\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the user login (login request, login fail, login success, logout)\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Reducers take in an initial state and an action\r\n// Handle certain cases for the user login (login request, login fail, login success, logout)\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_RESET:\r\n      // Empty the state upon reset\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline className=\"d-flex\">\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder=\"Search Products...\"\r\n        className=\"mr-sm-2 ml-sm-5\"\r\n      ></Form.Control>\r\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import axios from 'axios';\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userConstants';\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      'api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      'api/users',\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // Once registered, login the user\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// use getState to get userinfo to get the token to authorise request\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    // Get userInfo in userLogin state\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    // Send the token for authorization\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// use getState to get userinfo to get the token to authorise request\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    // Get userInfo in userLogin state\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    // Send the token for authorization\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // Data to be updated with is the user object\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// use getState to get userinfo to get the token to authorise request\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    // Get userInfo in userLogin state\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    // Send the token for authorization\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// use getState to get userinfo to get the token to authorise request\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    // Get userInfo in userLogin state\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    // Send the token for authorization\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// use getState to get userinfo to get the token to authorise request\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    // Get userInfo in userLogin state\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    // Send the token for authorization\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    });\r\n\r\n    // To update a user's details too\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n// Call an action = useDispatch\r\n// Bring something in = useSelector\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\r\nimport SearchBox from './SearchBox';\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst Header = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Select the userLogin part of the state and destructure the user info.  Will return info if logged in\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>RobShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className=\"ms-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col className='text-center py-3'>Copyright &copy; RobShop</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      {/* If text exists, then show it (&&) */}\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n};\r\n\r\n// Type checks props\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\n\r\n// Destructure the props to just get product\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top ' />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import axios from 'axios';\r\nimport {\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants';\r\n\r\nexport const listProducts =\r\n  (keyword = '', pageNumber = '') =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n      const { data } = await axios.get(\r\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n      );\r\n\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    // Get userInfo in userLogin state\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    // Send the token for authorization\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    // Get userInfo in userLogin state\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    // Send the token for authorization\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    // Get userInfo in userLogin state\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    // Send the token for authorization\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      });\r\n\r\n      // Get userInfo in userLogin state\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      // Send the token for authorization\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { loading, error, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Carousel pause=\"hover\" className=\"bg-dark\">\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className=\"carousel-caption\">\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"keyword\" content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To ProShop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electroincs',\r\n};\r\n\r\nexport default Meta;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Product from '../components/Product';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { listProducts } from '../actions/productActions';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport Meta from '../components/Meta';\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword;\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n  // Takes in state and what part of the state we want to select\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  //   Run when the component loads\r\n  useEffect(() => {\r\n    // Dispatch the listProducts action\r\n    dispatch(listProducts(keyword, pageNumber));\r\n    // Pass in an array of dependencies to trigger useEffect when it changes\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to=\"/\" className=\"btn btn-light\">\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {/* If loading is true, show loading, if error, show error, else show the products */}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {/* For each product, what do I want to show */}\r\n            {products.map((product) => (\r\n              // Need to add an unique key to filter through (_id)\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                {/* Pass in each product from the map to render each of the products */}\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Meta from '../components/Meta';\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\n// Match comes from Router\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  // Takes in state and what part of the state we want to select\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const { success: successProductReview, error: errorProductReview } =\r\n    productReviewCreate;\r\n\r\n  //   Run when the component loads\r\n  //   Have to define a function to use async arrow functions\r\n  //   Destructure data object in the response\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert('Review Submitted!');\r\n      setRating(0);\r\n      setComment('');\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n    // Pass in the id of the product\r\n    dispatch(listProductDetails(match.params.id));\r\n    // Pass in an array of dependencies to trigger useEffect when it changes\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {/* If loading is true, show loading, if error, show error, else show the product details */}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorProductReview && (\r\n                    <Message variant=\"danger\">{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <FormGroup controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          className=\"form-select mx-0\"\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </FormGroup>\r\n                      <FormGroup controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </FormGroup>\r\n                      <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from '../constants/cartConstants';\r\n\r\n// An action to add an item to the cart\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  // Things to be seen in the cart\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  // Can only store JSON in local storage\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n// An action to remove an item from the cart\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({ type: CART_REMOVE_ITEM, payload: id });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n// An action to save shipping address\r\nexport const saveShippingAddress = (data) => (dispatch, getState) => {\r\n  dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data });\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\n// An action to save payment method\r\nexport const savePaymentMethod = (data) => (dispatch, getState) => {\r\n  dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data });\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  // Check the query params in the URL\r\n  // If true, split the query param to get the quantity\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  console.log(cartItems);\r\n\r\n  // If there's a product ID, dispatch it and the quantity to the eadd to cart action\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = (id) => {\r\n    history.push('/login?redirect=shipping');\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {/* Loop through the cart items and call them item to display in the list group\r\n            Names are assigned in the cart action from the database */}\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    {/* Select box, value is the quantity from component state.  On change, function is triggered with the quantity in the box */}\r\n                    <Form.Control\r\n                      className=\"form-select\"\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      // If quantity is changed, add to cart is dispatched\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {/* Ends up with an array with the stock e.g. [0,1,2,3,4] and adds 1 to populate the drop down menu*/}\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal for (\r\n                {cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed to CheckOut\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  //   If URL Query string exists, take the query string and redirect\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    //   If user is logged in, redirect\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label className=\"mb-1\">Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            // Whatever we type in updates the email state\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label className=\"mb-1 mt-3\">Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            // Whatever we type in updates the password state\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button className=\"login-button mt-3\" type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?{' '}\r\n          {/* Redirect to whatever the redirect value is, if not, go to register */}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  //   If URL Query string exists, take the query string and redirect\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    //   If user is logged in, redirect\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {/* If there's a message, show message */}\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {/* If error, show error */}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            // Whatever we type in updates the email state\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            // Whatever we type in updates the email state\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            // Whatever we type in updates the password state\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            // Whatever we type in updates the confirm password state\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button className=\"login-button mt-3\" type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account{' '}\r\n          {/* Redirect to whatever the redirect value is, if not, go to register */}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\nimport { listMyOrders } from '../actions/orderActions';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  //   User comes from the userDetailsrReducer\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  //   User comes from the userLoginReducer\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  //   Orders comes from the orderListMyReducer\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    //   If user is not logged in, redirect to /login\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails('profile'));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        //   Prepopulate the form with name and email\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user.name, user.email, success]);\r\n\r\n  //   When form is submitted, user is passed into the action to then update the user\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      // User object to be passed into the action\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {/* If there's a message, show message */}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {/* If there's a message, show message */}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {/* If error, show error */}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              // Whatever we type in updates the email state\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              // Whatever we type in updates the email state\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              // Whatever we type in updates the password state\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              // Whatever we type in updates the confirm password state\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button className=\"login-button\" type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n} from '../constants/orderConstants';\r\nimport axios from 'axios';\r\n\r\n// use getState to get userinfo to get the token to authorise request\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    // Get userInfo in userLogin state\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    // Send the token for authorization\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // Data to be updated with is the order object\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// use getState to get userinfo to get the token to authorise request\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    // Get userInfo in userLogin state\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    // Send the token for authorization\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    // Data to be updated with is the specific order object\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// use getState to get userinfo to get the token to authorise request\r\nexport const payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_PAY_REQUEST,\r\n      });\r\n\r\n      // Get userInfo in userLogin state\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      // Send the token for authorization\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      // Data to be updated with is the specific order object\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// use getState to get userinfo to get the token to authorise request\r\nexport const listMyOrders =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_MY_REQUEST,\r\n      });\r\n\r\n      // Get userInfo in userLogin state\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      // Send the token for authorization\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      // Data to be updated with is the specific order object\r\n      const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n      dispatch({\r\n        type: ORDER_LIST_MY_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_LIST_MY_FAIL,\r\n        //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// use getState to get userinfo to get the token to authorise request\r\nexport const listOrders =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_REQUEST,\r\n      });\r\n\r\n      // Get userInfo in userLogin state\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      // Send the token for authorization\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      // Data to be updated with is the specific order object\r\n      const { data } = await axios.get(`/api/orders`, config);\r\n\r\n      dispatch({\r\n        type: ORDER_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_LIST_FAIL,\r\n        //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// use getState to get userinfo to get the token to authorise request\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      //   Return error response and if there's a specific error message, return it, if not, return the error message\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  // Shipping address is added to the cart state in the store.js  file\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //   On submit, dispatch the data to saveShippingAddress and push to payment\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push('/payment');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Address\"\r\n            value={address}\r\n            required\r\n            // Whatever we type in updates the address state\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter City\"\r\n            value={city}\r\n            required\r\n            // Whatever we type in updates the city state\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Postal Code\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Postal Code\"\r\n            value={postalCode}\r\n            required\r\n            // Whatever we type in updates the postal code state\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Country\"\r\n            value={country}\r\n            required\r\n            // Whatever we type in updates the country state\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  // Shipping address is added to the cart state in the store.js  file\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping');\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //   On submit, dispatch the data to payment method selected in the form and push to place order\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod({ paymentMethod }));\r\n    history.push('/placeorder');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\" className=\"mb-1\">\r\n            Select Method\r\n          </Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"Paypal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"Paypal\"\r\n              checked\r\n              // Update default payment method state with whatever is selected\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type=\"radio\"\r\n              label=\"Stripe\"\r\n              id=\"Stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"Stripe\"\r\n              // Update default payment method state with whatever is selected\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  //   Ensures all calculated tax prices have a 0 at the end of it\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  //   CaLculate prices\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 10);\r\n\r\n  cart.taxPrice = addDecimals(Number((cart.itemsPrice * 0.15).toFixed(2)));\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroupItem>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroupItem>\r\n\r\n            <ListGroupItem>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod.paymentMethod}\r\n            </ListGroupItem>\r\n\r\n            <ListGroupItem>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {/* Map through each item in the cart*/}\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroupItem key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroupItem>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroupItem>\r\n                <h2>Order Summary</h2>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block w-100\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions';\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Give us the logged in user's info\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { success: successPay, loading: loadingPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { success: successDeliver, loading: loadingDeliver } = orderDeliver;\r\n\r\n  if (!loading) {\r\n    //   Ensures all calculated tax prices have a 0 at the end of it\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    //   CaLculate prices\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n\r\n    order.taxPrice = addDecimals(Number((order.itemsPrice * 0.15).toFixed(2)));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n    // When the component is loaded, retreive the paypal client id and load the paypal payment script to the body\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || order._id !== orderId || successPay || successDeliver) {\r\n      // To stop the page from refreshing after loading\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, order, successPay, successDeliver, history, userInfo]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroupItem>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroupItem>\r\n\r\n            <ListGroupItem>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroupItem>\r\n\r\n            <ListGroupItem>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {/* Map through each item in the cart*/}\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroupItem key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroupItem>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroupItem>\r\n                <h2>Order Summary</h2>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              {!order.isPaid && (\r\n                <ListGroupItem>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroupItem>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: 'green' }} />\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: 'red' }} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\" />\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\" />\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push('/admin/userlist');\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, dispatch, userId, history, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                // Whatever we type in updates the email state\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                // Whatever we type in updates the email state\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"isadmin\" className=\"mt-3\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin?\"\r\n                checked={isAdmin}\r\n                // Whatever we type in updates the password state\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n            <Button\r\n              className=\"login-button mt-3\"\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Button, Table, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login');\r\n    }\r\n\r\n    // If create product is called successfully, redirect to the page\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts('', pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-end\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\" />\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\" />\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [category, setCategory] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push('/admin/productlist');\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCountInStock(product.countInStock);\r\n        setCategory(product.category);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, productId, product, successUpdate, history]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    //   Access to the first item in the array\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        brand,\r\n        image,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productList\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                // Whatever we type in updates the email state\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"price\"\r\n                placeholder=\"Enter Price\"\r\n                value={price}\r\n                // Whatever we type in updates the email state\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image url\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"brand\"\r\n                placeholder=\"Enter Brand\"\r\n                value={brand}\r\n                // Whatever we type in updates the email state\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"countInStock\"\r\n                placeholder=\"Enter Count In Stock\"\r\n                value={countInStock}\r\n                // Whatever we type in updates the email state\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label> Category</Form.Label>\r\n              <Form.Control\r\n                type=\"category\"\r\n                placeholder=\"Enter Category\"\r\n                value={category}\r\n                // Whatever we type in updates the email state\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label> Description</Form.Label>\r\n              <Form.Control\r\n                type=\"description\"\r\n                placeholder=\"Enter Description\"\r\n                value={description}\r\n                // Whatever we type in updates the email state\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              className=\"login-button mt-3\"\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL PRICE</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: 'red' }} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: 'red' }} />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport CartScreen from './screens/CartScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ShippingScreen from './screens/ShippingScreen';\r\nimport PaymentScreen from './screens/PaymentScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport UserListScreen from './screens/UserListScreen';\r\nimport UserEditScreen from './screens/UserEditScreen';\r\nimport ProductListScreen from './screens/ProductListScreen';\r\nimport ProductEditScreen from './screens/ProductEditScreen';\r\nimport OrderListScreen from './screens/OrderListScreen';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path=\"/product/:id\" component={ProductScreen} />\r\n          <Route path=\"/login\" component={LoginScreen} />\r\n          <Route path=\"/shipping\" component={ShippingScreen} />\r\n          <Route path=\"/payment\" component={PaymentScreen} />\r\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\r\n          <Route path=\"/order/:id\" component={OrderScreen} />\r\n          <Route path=\"/register\" component={RegisterScreen} />\r\n          <Route path=\"/profile\" component={ProfileScreen} />\r\n          <Route path=\"/cart/:id?\" component={CartScreen} />\r\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\r\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\r\n          <Route\r\n            path=\"/admin/productlist\"\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path=\"/admin/productlist/:pageNumber\"\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\r\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\r\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\r\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\r\n          <Route\r\n            path=\"/search/:keyword/page/:pageNumber\"\r\n            component={HomeScreen}\r\n            exact\r\n          />\r\n          <Route path=\"/\" component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// Implement the reducers in the application\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}